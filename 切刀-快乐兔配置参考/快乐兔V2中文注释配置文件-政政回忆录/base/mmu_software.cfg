## Happy Hare 支持宏

[save_variables]
filename: /home/klipper/printer_data/config/mmu/mmu_vars.cfg

########################################################################
# 刀具更换宏
# 这是在安装时自动生成的，但您可以增加或减少此列表以匹配您实际使用的刀具数量
#######################################################################
[gcode_macro T0]
gcode: MMU_CHANGE_TOOL TOOL=0
[gcode_macro T1]
gcode: MMU_CHANGE_TOOL TOOL=1
[gcode_macro T2]
gcode: MMU_CHANGE_TOOL TOOL=2
[gcode_macro T3]
gcode: MMU_CHANGE_TOOL TOOL=3
[gcode_macro T4]
gcode: MMU_CHANGE_TOOL TOOL=4
[gcode_macro T5]
gcode: MMU_CHANGE_TOOL TOOL=5
[gcode_macro T6]
gcode: MMU_CHANGE_TOOL TOOL=6
[gcode_macro T7]
gcode: MMU_CHANGE_TOOL TOOL=7
[gcode_macro T8]
gcode: MMU_CHANGE_TOOL TOOL=8


########################################################################
# 简化的命令子集，仅用于在 Mainsail/Fluidd UI 中可见
# 在自定义面板完成之前，这是自动完成的！
# __ 是一个技巧，因为它不会在UI中显示，但在这里定义宏的事实意味着Mainsail/Fluidd仍然能看到它们
########################################################################
[gcode_macro MMU__EJECT]
gcode: MMU_EJECT

[gcode_macro MMU__HOME]
gcode:
    {% set TOOL = params.TOOL|default(0)|int %}
    {% set FORCE_UNLOAD = params.FORCE_UNLOAD|default(0)|int %}
    MMU_HOME TOOL={TOOL} FORCE_UNLOAD={FORCE_UNLOAD}

[gcode_macro MMU__STATUS]
gcode: MMU_STATUS

[gcode_macro MMU__MOTORS_OFF]
gcode: MMU_MOTORS_OFF

[gcode_macro MMU__SERVO]
gcode:
    {% set POS = params.POS|default("up")|string %}
    MMU_SERVO POS={POS}

[gcode_macro MMU__SELECT_TOOL]
gcode:
    {% set TOOL = params.TOOL|default(0)|int %}
    MMU_SELECT TOOL={TOOL}

[gcode_macro MMU__SELECT_BYPASS]
gcode: MMU_SELECT_BYPASS

[gcode_macro MMU__LOAD_BYPASS]
gcode: MMU_LOAD_BYPASS

[gcode_macro MMU__RECOVER]
gcode: MMU_RECOVER

[gcode_macro MMU__PRELOAD]
gcode:
    {% set GATE = params.GATE|default(0)|int %}
    MMU_PRELOAD GATE={GATE}

[gcode_macro MMU__CHECK_GATES]
gcode:
    {% set GATE = params.GATE|default(0)|int %}
    MMU_CHECK_GATES GATE={GATE}

# 有用的便利命令...

[gcode_macro MMU_CHANGE_TOOL_STANDALONE]
description: 用于在打印开始时加载初始刀具的便利宏（在 mmu_software.cfg 中定义）
gcode:
    {% set TOOL = params.TOOL|default(0)|int %}
    MMU_CHANGE_TOOL TOOL={TOOL} STANDALONE=1


########################################################################
# 单独调整喷嘴尖端形状（也有助于快速调整切片参数值）
########################################################################
[gcode_macro _MMU_FORM_TIP_STANDALONE]
description: 模拟SuperSlicer进程的独立宏

# 卸载和插料数值 - 形成和塑造尖端的初始移动
variable_unloading_speed_start: 80     # 快速移动，以将熔融区的塑料与丝材分离（非常初始的回退，SS使用距离为E-15）
variable_unloading_speed: 20           # 过快会形成过长的尖端或头发。在这里更慢更好 UNLOADING_SPEED_START/COOLING_MOVES 似乎是一个不错的起点
variable_ramming_volume: 0             # （mm^3）SS默认值 = 2, 5, 9, 13, 18, 23, 27。仅用于模拟独立的SS插料
variable_ss_ramming: 0                 # 设置为0以进行独立的插料（RAMMING_VOLUME），设置为1以让切片软件执行插料（即在独立模式下关闭）

# 冷却移动数值 - 用于冷却形成的尖端并将其与丝材分离
variable_cooling_tube_position: 35     # 从加热器块顶部到散热器顶部的距离 Dragon ST：35，Dragon HF：30，Mosquito：30，Revo：35，Phaetus Rapido HF：43；
variable_cooling_tube_length: 10       # 从喷嘴到加热器块顶部的距离 Dragon ST：15，Dragon HF：10，Mosquito：20，Revo：10，Phaetus Rapido HF：22；
variable_initial_cooling_speed: 10     # 缓慢以使尖端固化并冷却形成的丝材
variable_final_cooling_speed: 50       # 高速将分离的丝材拉断。过快会导致尖端变形。过慢会导致丝材拉得过长/无法分离
variable_toolchange_temp: 0            # 用于工具更换时降低温度，默认为0
variable_cooling_moves: 4              # 冷却移动次数 2-4 是一个不错的起点

# SkinnyDip数值 - 仅用于燃烧非常细小的毛发（不适用于长尖端重塑）
variable_use_skinnydip: 1              # 最后调整此值，仅用于去除非常细小的毛发（与长尖端不同）
variable_skinnydip_distance: 30        # 从Cooling_tube_position下方开始，根据插料量的使用情况逐渐增加
variable_dip_insertion_speed: 30       # 中慢速 - 恰好足够融化细小的毛发。过慢会拉断熔融的丝材
variable_dip_extraction_speed: 70      # 大约是插入速度的两倍，防止形成新的毛发
variable_melt_zone_pause: 0            # 毫秒 - 默认为0
variable_cooling_zone_pause: 0         # 毫秒 - 默认为0 - 如果需要在这里进行调整，可能是插入速度太慢了
variable_use_fast_skinnydip: 0         # 跳过SkinnyDip移动时的工具头温度更改 - 默认为0

# 最终排出 - 仅用于独立调整。由`MMU_FORM_TIP`命令自动设置
variable_final_eject: 0                # 默认为0，在独立调整过程中启用以排出丝材

# 将丝材停放准备排出
variable_parking_distance: 0           # 最终冷却移动后的丝材停放位置，0将保留丝材在其自然停留的位置

gcode:
    # 初始化参数
    {% set UNLOADING_SPEED_START = params.UNLOADING_SPEED_START|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['unloading_speed_start']) %}
    {% set UNLOADING_SPEED = params.UNLOADING_SPEED|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['unloading_speed']) %}
    {% set RAMMING_VOLUME = params.RAMMING_VOLUME|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['ramming_volume']) %}
    {% set SS_RAMMING = params.SS_RAMMING|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['ss_ramming']) %}
    {% set COOLING_TUBE_LENGTH = params.COOLING_TUBE_LENGTH|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['cooling_tube_length']) %}
    {% set COOLING_TUBE_POSITION = params.COOLING_TUBE_POSITION|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['cooling_tube_position']) %}
    {% set INITIAL_COOLING_SPEED = params.INITIAL_COOLING_SPEED|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['initial_cooling_speed']) %}
    {% set FINAL_COOLING_SPEED = params.FINAL_COOLING_SPEED|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['final_cooling_speed']) %}
    {% set COOLING_MOVES = params.COOLING_MOVES|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['cooling_moves']) %}
    {% set TOOLCHANGE_TEMP = params.TOOLCHANGE_TEMP|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['toolchange_temp']) %}
    {% set USE_SKINNYDIP = params.USE_SKINNYDIP|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['use_skinnydip']) %}
    {% set USE_FAST_SKINNYDIP = params.USE_FAST_SKINNYDIP|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['use_fast_skinnydip']) %}
    {% set SKINNYDIP_DISTANCE = params.SKINNYDIP_DISTANCE|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['skinnydip_distance']) %}
    {% set DIP_INSERTION_SPEED = params.DIP_INSERTION_SPEED|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['dip_insertion_speed']) %}
    {% set DIP_EXTRACTION_SPEED = params.DIP_EXTRACTION_SPEED|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['dip_extraction_speed']) %}
    {% set MELT_ZONE_PAUSE = params.MELT_ZONE_PAUSE|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['melt_zone_pause']) %}
    {% set COOLING_ZONE_PAUSE = params.COOLING_ZONE_PAUSE|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['cooling_zone_pause']) %}
    {% set PARKING_DISTANCE = params.PARKING_DISTANCE|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['parking_distance']) %}
    {% set FINAL_EJECT = params.FINAL_EJECT|default(printer['gcode_macro _MMU_FORM_TIP_STANDALONE']['final_eject']) %}

    G91
    M83
    G92 E0
    
    #---------------------------------#
    #-喷嘴成型过程从这里开始-#
    #---------------------------------#

    SET_PRESSURE_ADVANCE ADVANCE=0
    {% set OLD_TEMP = printer.extruder.target %}
    {% if SS_RAMMING|int == 0 and RAMMING_VOLUME|int > 0 %} # Standalone Ramming
        {% set RATIO = (RAMMING_VOLUME|float) /23.0 %}
        G1 E{0.5784 * RATIO|float} F299 #7
        G1 E{0.5834 * RATIO|float} F302 #3
        G1 E{0.5918 * RATIO|float} F306 #6
        G1 E{0.6169 * RATIO|float} F319 #6
        G1 E{0.3393 * RATIO|float} F350 #0
        G1 E{0.3363 * RATIO|float} F350 #0
        G1 E{0.7577 * RATIO|float} F392 #6
        G1 E{0.8382 * RATIO|float} F434 #3
        G1 E{0.7776 * RATIO|float} F469 #9
        G1 E{0.1293 * RATIO|float} F469 #9
        G1 E{0.9673 * RATIO|float} F501 #2
        G1 E{1.0176 * RATIO|float} F527 #2
        G1 E{0.5956 * RATIO|float} F544 #6
        G1 E{0.4555 * RATIO|float} F544 #6
        G1 E{1.0662 * RATIO|float} F552 #4
    {% endif %}

    # 在从熔融区域提取挤出物之前，设置工具温度，并等待设定点
    # （SKINNYDIP - 仅适用于正常模式）
    # 仅在更换不同类型的挤出物时使用，例如 ABS-->PLA
    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 0 %}
         M109 S{TOOLCHANGE_TEMP}
    {% endif %}

    # 卸载 - 这是喷嘴尖部形状的来源，速度更快=细长/尖细/更高的线头
    {% set TOTAL_RETRACTION_DISTANCE = COOLING_TUBE_POSITION|float + COOLING_TUBE_LENGTH|float / 2 - 15 %}
    G1 E-15 F{1.0 * UNLOADING_SPEED_START|float * 60} # Default value from SS - Cannot modify
    G1 E-{0.7 * TOTAL_RETRACTION_DISTANCE} F{1.0 * UNLOADING_SPEED|float * 60}
    G1 E-{0.2 * TOTAL_RETRACTION_DISTANCE} F{0.5 * UNLOADING_SPEED|float * 60}
    G1 E-{0.1 * TOTAL_RETRACTION_DISTANCE} F{0.3 * UNLOADING_SPEED|float * 60}

    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 1 %}
        M104 S{TOOLCHANGE_TEMP}
    {% endif %}

    # 生成冷却移动 - 固化喷嘴尖形状，并帮助打断形成的线头
    {% set SPEED_INC = (FINAL_COOLING_SPEED|float - INITIAL_COOLING_SPEED|float) / (2 * COOLING_MOVES|float - 1) %}
    {% for move in range(COOLING_MOVES|int) %}
        G1 E{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*move*2) * 60}
        G1 E-{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*(move*2+1)) * 60}
    {% endfor %}

    # 在冷却移动完成后等待挤出机达到工具温度（SKINNYDIP - 快速模式）
    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 1 %}
        M109 S{TOOLCHANGE_TEMP}
    {% endif %}

    # Skinny dip移动 - 烧掉非常细的毛发（适用于PLA）
    {% if USE_SKINNYDIP|int == 1 %}
        G1 E{SKINNYDIP_DISTANCE} F{DIP_INSERTION_SPEED|float * 60}
        G4 P{MELT_ZONE_PAUSE}
        G1 E-{SKINNYDIP_DISTANCE} F{DIP_EXTRACTION_SPEED|float * 60}
        G4 P{COOLING_ZONE_PAUSE}
    {% endif %}

    {% if TOOLCHANGE_TEMP|float > 0 %}
        M104 S{OLD_TEMP}
    {% endif %}
    
    # 成型完成后排出挤出物 - 仅独立模式
    {% if FINAL_EJECT|int == 1 %}
        G92 E0
        G1 E-80 F3000

    # 在固定位置停放挤出物
    {% elif PARKING_DISTANCE|int > 0 %}
        G90
        M82
        G1 E-{PARKING_DISTANCE} F3000

    {% endif %}

    G92 E0
    G90
    M82

########################################################################
# 独立挤出头剪切模板
# 请注意，这只是一个示例占位符，可通过在mmu_parameters.cfg中设置'form_tip_gcode: _MMU_CUT_TIP'来配置
# 作为_MMU_FORM_TIP的替代。
########################################################################
[gcode_macro _MMU_CUT_TIP]
description: 用于切割耗材逻辑的独立宏

# 最终排出 - 仅用于独立测试。由`MMU_FORM_TIP`命令自动设置
variable_final_eject: 0                # 默认值为0，在独立调校过程中启用，以便在切割后抽出耗材

# 耗材的停车位置是相对于喷嘴的，并表示形成耗材尖端之后耗材的末端位置。
# 耗材的停车位置很重要，用于Happy Hare完成卸料过程。
# 如果耗材被切断，很重要的是报告切割机器相对于喷嘴留下的耗材位置。
# 可以使用以下结构在gcode中动态设置该值：
#   SET_GCODE_VARIABLE MACRO=_MMU_CUT_TIP VARIABLE=output_park_pos VALUE=-1
# 或者预先设置为变量，如下所示：
variable_output_park_pos: 0           # 停车位置（传递回Happy Hare的输出变量）

gcode:
# 初始化参数
    {% set FINAL_EJECT = params.FINAL_EJECT|default(printer['gcode_macro _MMU_CUT_TIP']['final_eject']) %}
    G91                                 # XYZ相对定位
    M83                                 # E相对定位
    G92 E0                              # 设置坐标E0

    # 在这里插入或调用您的自定义切割GCODE...
    CUT                                 # 切

    # 切割后排出 - 用于测试的实用选项
    {% if FINAL_EJECT|int == 1 %}
        G92 E0                          # 设置坐标E0
        M83                             # E相对定位
        G1 E-80 F3000                   # 回抽80
    {% endif %}

    G92 E0                              # 设置坐标E0
    G90                                 # XYZ绝对定位
    M82                                 # E绝对定位


###########################################################################
# 修改Happy Hare行为的回调宏
# 在换工具时发生在卸料之前
#
# 通常你会将工具头移动到一个不会滴漏的位置
# 请注意，z_hop由Happy Hare自动控制，并且
# 使用'z_hop_height_toolchange'参数指定
#
[gcode_macro _MMU_PRE_UNLOAD]
description: 用于换丝材料前的可选卸料前例程
gcode:

###########################################################################
# 修改Happy Hare行为的回调宏
# 在换工具时发生在装载新丝材料之后
#
# 通常你会清理喷嘴，然后返回到之前的位置
# 请注意，Happy Hare确保了原始工具头位置的恢复。
#
[gcode_macro _MMU_POST_LOAD]
description: 用于换丝材料后的可选装载后例程
gcode:
    EXTRUDE_FILAMENT                    # 挤出废料
    CLEAN_NOZZLE                        # 擦嘴

    G92 E0                              # 设置坐标E0
    G90                                 # XYZ绝对定位
    M82                                 # E绝对定位   
###########################################################################
# 修改Happy Hare行为的回调宏
# 请注意，EndlessSpool是一种无人监管的丝材料更换方式
# 在MMU形成喷丝端并排出旧丝材料残余之前发生
#
# 通常你会将工具头移动到停车位置以避免滴漏
# 请注意，z_hop由Happy Hare自动控制，并且
# 使用'z_hop_height_toolchange'参数指定
#
# 这可能与你在PAUSE宏中做的操作相似，你可以直接在这里调用它...
# （这个调用使用在client_macros.cfg中提供的参考PAUSE宏）
#
[gcode_macro _MMU_ENDLESS_SPOOL_PRE_UNLOAD]
description: 用于无尽丝材料更换前的可选卸料前例程
gcode:
    PAUSE

###########################################################################
# 修改Happy Hare行为的回调宏
# 请注意，EndlessSpool是一种无人监管的丝材料更换方式
# 在MMU从轮换的下一个卷轴中装载新丝材料之后发生
# MMU将以与正常丝材料更换相同的方式将新丝材料装载到喷嘴上
# 先前配置的压力提前将被保留。
#
# 如果需要，这将是排出额外丝材料的地方（实际上不应该需要）
# 如果你的打印机配备得当，还可以清理喷嘴。
# 请注意，Happy Hare确保了原始工具头位置的恢复。
#
# 这可能与你在RESUME宏中做的操作相似，你可以直接在这里调用它...
# （这个调用使用在client_macros.cfg中提供的参考RESUME宏）
#
[gcode_macro _MMU_ENDLESS_SPOOL_POST_LOAD]
description: 用于无尽丝材料更换后的可选装载后例程
gcode:
    RESUME

###########################################################################
# 当MMU动作状态发生变化时触发此宏。`ACTION`参数将包含
# 当前动作字符串（也可以在`printer.mmu.action`打印机变量中找到）。
# 先前的动作也可在`OLD_ACTION`中找到。详细的动作字符串列表请参考Happy Hare的README。
#
# 这个地方可以用来设置LED状态或类似的操作。下面的逻辑演示了三种主要的动作状态。
#
[gcode_macro _MMU_ACTION_CHANGED]
description: 当动作发生变化时调用
gcode:
    {% set ACTION = params.ACTION|string %}
    {% set OLD_ACTION = params.OLD_ACTION|string %}

    {% if ACTION|string == "Loading" %}
        # 在这里添加你的逻辑，例如加载时点亮LED
        # _STATUS_LOADING
    {% endif %}

    {% if ACTION|string == "Unloading" %}
        # 在这里添加你的逻辑，例如卸载时点亮LED
        # _STATUS_UNLOADING
    {% endif %}

    {% if ACTION|string == "Idle" %}
        # 在这里添加你的逻辑，例如LED关闭
        # _STATUS_STANDBY
    {% endif %}

###########################################################################
# 高级：用户可自定义的加载和卸载序列
# 默认情况下，Happy Hare会调用内部逻辑来处理加载和卸载序列。要启用用户定义序列的调用，您必须将以下内容添加到mmu_parameters.cfg文件中
# gcode_load_sequence: 1     # Gcode加载序列 1=启用，0=内部逻辑（默认）
# gcode_unload_sequence: 1   # Gcode卸载序列 1=启用，0=内部逻辑（默认）
# 此参考示例加载序列与内部序列完全相同。它使用高级别的“模块化”移动，所有这些移动都由mmu_parameters.cfg中定义的参数控制，并自动保持内部丝材位置状态最新。切换到这些宏不应更改行为，并可用作自定义的起点
# 状态机:
# 如果您在此基础上进行更多的实验，您需要了解丝材位置的可能状态。这与作为`printer.mmu.filament_pos`打开的状态相同。此内部状态必须保持最新，并随着自定义移动序列的进展而直接设置。目前状态机不可扩展。
#
#        FILAMENT_POS_UNKNOWN = -1
#  L  ^  FILAMENT_POS_UNLOADED = 0
#  O  |  FILAMENT_POS_START_BOWDEN = 1
#  A  |  FILAMENT_POS_IN_BOWDEN = 2
#  D  U  FILAMENT_POS_END_BOWDEN = 3
#  |  N  FILAMENT_POS_HOMED_EXTRUDER = 4
#  |  L  FILAMENT_POS_PAST_EXTRUDER = 5
#  |  O  FILAMENT_POS_HOMED_TS = 6
#  |  A  FILAMENT_POS_IN_EXTRUDER = 7    # 又名丝材已经过工具头传感器
#  v  D  FILAMENT_POS_LOADED = 8         # 又名丝材已对准喷嘴
#
# 最后注意事项：
# 1) 您需要尊重传递给宏的上下文，比如要移动的期望“length”，因为这可以用于测试加载
# 2) 卸载宏可以在任何位置（状态）下调用丝材。您需要处理任何起点。默认参考可作为良好的指南
[gcode_macro _MMU_LOAD_SEQUENCE]
description: 当要求MMU加载丝材时调用
gcode:
    {% set filament_pos = params.FILAMENT_POS|float %}
    {% set length = params.LENGTH|float %}
    {% set full = params.FULL|int %}
    {% set home_extruder = params.HOME_EXTRUDER|int %}
    {% set skip_extruder = params.SKIP_EXTRUDER|int %}
    {% set extruder_only = params.EXTRUDER_ONLY|int %}

    {% if extruder_only %}
        _MMU_STEP_LOAD_TOOLHEAD EXTRUDER_ONLY=1

    {% elif filament_pos >= 5 %}
        {action_raise_error("无法加载 - 已在挤出器内！")}

    {% else %}
        {% if filament_pos <= 0 %}                      # FILAMENT_POS_UNLOADED
            _MMU_STEP_LOAD_ENCODER
        {% endif %}

        {% if filament_pos < 3 %}                       # FILAMENT_POS_END_BOWDEN
            _MMU_STEP_LOAD_BOWDEN LENGTH={length}
        {% endif %}

        {% if filament_pos < 4 and home_extruder %}     # FILAMENT_POS_HOMED_EXTRUDER
            _MMU_STEP_HOME_EXTRUDER
        {% endif %}

        {% if not skip_extruder %}                      # FILAMENT_POS_PAST_EXTRUDER
            _MMU_STEP_LOAD_TOOLHEAD
        {% endif %}

    {% endif %}

[gcode_macro _MMU_UNLOAD_SEQUENCE]
description: 当要求MMU卸载丝材时调用
gcode:
    {% set filament_pos = params.FILAMENT_POS|float %}
    {% set length = params.LENGTH|float %}
    {% set extruder_only = params.EXTRUDER_ONLY|int %}
    {% set park_pos = params.PARK_POS|float %}

    {% if extruder_only %}
        {% if filament_pos >= 5 %}                      # FILAMENT_POS_PAST_EXTRUDER
            _MMU_STEP_UNLOAD_TOOLHEAD EXTRUDER_ONLY=1 PARK_POS={park_pos}
        {% else %}
            {action_raise_error("无法卸载挤出器 - 已经卸载！")}
        {% endif %}

    {% elif filament_pos == 0 %}
        {action_raise_error("无法卸载 - 已经卸载！")}

    {% else %}
        {% if filament_pos >= 5 %}                      # FILAMENT_POS_PAST_EXTRUDER
            # 退出挤出器，快速卸载波顿，然后慢速卸载编码器
            _MMU_STEP_UNLOAD_TOOLHEAD PARK_POS={park_pos}
        {% endif %}

        {% if filament_pos >= 3 %}                      # FILAMENT_POS_END_BOWDEN
            # 快速卸载波顿，然后慢速卸载编码器
            _MMU_STEP_UNLOAD_BOWDEN FULL=1
            _MMU_STEP_UNLOAD_ENCODER

        {% elif filament_pos >= 1 %}                    # FILAMENT_POS_START_BOWDEN
            # 必须进行慢速卸载，因为我们不知道波顿中的确切位置
            _MMU_STEP_UNLOAD_ENCODER FULL=1
        {% endif %}

    {% endif %}

# 以下是一些替代宏的示例
# 1. 此加载示例利用内置模块将丝材加载到波登管的末端。然后使用同步齿轮和挤出机移动将丝材对准工具头传感器（mmu_toolhead）进行归位。
# 状态被更新以反映新的位置。然后执行62mm的同步步进移动以将丝材推送到喷嘴
# [gcode_macro _MMU_LOAD_SEQUENCE]
# description: 当要求MMU加载丝材时调用
# gcode:
#     {% set filament_pos = params.FILAMENT_POS|float %}
#     {% set length = params.LENGTH|float %}
#     {% set skip_extruder = params.SKIP_EXTRUDER|int %}
#     {% set extruder_only = params.EXTRUDER_ONLY|int %}

#     {% if extruder_only %}
#         _MMU_STEP_HOMING_MOVE ENDSTOP=mmu_toolhead MOVE=50 MOTOR=extruder
#         _MMU_STEP_SET_FILAMENT STATE=6        # FILAMENT_POS_HOMED_TS
#         _MMU_STEP_MOVE MOVE=62 MOTOR=extruder
#         _MMU_STEP_SET_FILAMENT STATE=8        # FILAMENT_POS_LOADED
#     {% else %}
#         _MMU_STEP_LOAD_ENCODER
#         _MMU_STEP_LOAD_BOWDEN LENGTH={length}
#         {% if full and not skip_extruder %}
#             _MMU_STEP_HOMING_MOVE ENDSTOP=mmu_toolhead MOVE=50 MOTOR=gear+extruder
#             _MMU_STEP_SET_FILAMENT STATE=6    # FILAMENT_POS_HOMED_TS
#             _MMU_STEP_MOVE MOVE=62 MOTOR=gear+extruder
#             _MMU_STEP_SET_FILAMENT STATE=8    # FILAMENT_POS_LOADED
#         {% endif %}
#     {% endif %}

# 2. 这个非常简化的加载示例开始类似地加载到校准波登管的末端。
# 然后，它简单地对准到喷嘴（使用挤出机步进电机上的TMC stallguard！）使用同步挤出机+齿轮步进电机。
# 这要求`mmu_ext_touch`端点被定义为挤出机步进电机之一
# [gcode_macro _MMU_LOAD_SEQUENCE]
# description: 当要求MMU加载丝材时调用
# gcode:
#     {% set length = params.LENGTH|float %}
#     {% set full = params.FULL|int %}
#     {% set skip_extruder = params.SKIP_EXTRUDER|int %}
#     {% set extruder_only = params.EXTRUDER_ONLY|int %}

#     {% if extruder_only %}
#         _MMU_STEP_HOMING_MOVE ENDSTOP=mmu_ext_touch MOVE=100 MOTOR=extruder
#         _MMU_STEP_SET_FILAMENT STATE=8    # FILAMENT_POS_LOADED
#     {% else %}
#         _MMU_STEP_LOAD_ENCODER
#         _MMU_STEP_LOAD_BOWDEN LENGTH={length}
#         {% if full and not skip_extruder %}
#             _MMU_STEP_HOMING_MOVE ENDSTOP=mmu_ext_touch MOVE=100 MOTOR=extruder+gear
#             _MMU_STEP_SET_FILAMENT STATE=8    # FILAMENT_POS_LOADED
#         {% endif %}
#     {% endif %}
