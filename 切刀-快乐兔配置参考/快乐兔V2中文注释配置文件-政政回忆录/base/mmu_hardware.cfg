## Happy Hare MMU hardware config file with config for unknown
##
## Common external mcus:
## 1) EASY-BRD
##  J6 Jumper setting
##   Option 1: Pins 2-3 and 4-5, i.e.  .[..][..] (recommended)
##   This allows for option of "touch" selector setup. Note that this enables the option disables the "extra"
##   switch so the toolhead sensor (if used) would have to be connected to the main mcu
##
## Happy Hare MMU硬件配置文件
##
## 常见的外部MCU（微控制器）：
## 1）EASY-BRD
##  J6跳线设置
##   选项1：引脚2-3和4-5，即[..][..]（建议）
##   这允许选择“触摸”设置。请注意，这将启用该选项并禁用“额外”开关，因此工具头传感器（如果使用）必须连接到主MCU。
##
##   选项2：引脚1-2和4-5，即[..].[..]
##   如果您不关心选择器的触摸操作。 "额外"开关用于其他用途。
##
##  请注意，EASY-BRD不公开齿轮步进电机的DIAG引脚。
##
## 2）Fysetc Burrows ERB
##  Fysetc Burrows ERB板不需要跳线配置。选择器和齿轮的DIAG引脚都可用。
##
##  ERB固件刷写注意事项：
##   必须使用12V/24V电源供电
##    > make menuconfig（rpi2040，无引导程序）
##    > make
##  将卡片置于引导程序模式：按住'BOOTSEL'；点击'RST'；释放'BOOTSEL'
##    > make flash FLASH_DEVICE=2e8a:0003
##
## ------
##
## 关于“触摸”终点开关的说明：Happy Hare提供非常灵活的归位选项，可用于单个步进电机或同步步进电机。
## "触摸"选项利用了stallguard，并需要在TMC驱动程序部分设置适当的'diag_pin'和stallguard参数。如果已经公开了DIAG引脚，定义它们是无害的，因为只有在需要时才会使用和配置它们。
##
## 每个步进电机的“触摸”选项提供以下好处/可能性：
##  - 允许自动检测挤出步进电机的喷嘴位置！
##  - 允许自动检测选择器步进电机门口的卡塞和随后的恢复
##  - 允许自动检测齿轮步进电机的喂料口卡塞
##
## 这听起来很棒，对吧？的确如此，但有一些考虑因素：
##  - 外部EASY-BRD和ERB MCU在检测stallguard时性能不佳，经常导致“低电压错误”。通常情况下，可以调整选择器的触摸（TMC2209），特别是如果将'stealthchop_threshold'设置为大于归位速度且小于行程速度的值。也就是说，在归位过程中，步进电机以stealthchop模式运行。 [klipper专家会知道，在自动切换芯片模式为stealthchop，然后在归位后自动切换回spreadcycle以支持Stallguard2；但是，自动切换回spreadcycle会触发错误条件。正确设置'stealthchop_threshold'可以避免这种情况。我确定我说的比你想知道的要多！
##  - 在EASY-BRD和ERB MCU上启用齿轮步进电机的触摸不是一个明智的选择，因为您确实需要来自spreadcycle的额外扭矩，因此调整'stealthchop_threshold'并不是一个真正的选择。
##  - 对于挤出步进电机启用触摸是可行的，但您可能需要更改主MCU上的跳线以公开挤出步进电机驱动程序的DIAG引脚。
##
## 总之，“触摸”归位是您的MMU的高级选项，需要耐心和谨慎的调整。幸运的是，一切都可以使用常规终点开关正常工作，并且对于一些归位点的缺失，有创造性的解决方案。我对您想出的创意设置非常感兴趣。随时在Discord上联系我（moggieuk#6538）。
##
## 有关串行定义和引脚别名，请参考mmu.cfg
## 请随时提出任何进一步的
[mmu_config_setup]			                        # 用于自动获取挤出机配置的神奇助手

# 可归位挤出机 --------------------------------------------------------------------------------------------------
# 对于Happy Hare，将挤出机步进电机定义移动到这里非常重要，以便允许复杂的归位和同步选项。
# 这个定义将替换你现有的 [extruder] 定义中的步进电机定义部分。

# 重要提示：将与常规 [extruder] 相关的完整步进电机驱动器配置移动到这里，并注释掉
# printer.cfg 中原始的驱动器配置。
[tmc2209 manual_extruder_stepper extruder]
uart_pin: sb2040:gpio8                              # uart通讯端口Pin脚定义
# uart_address: 1                                     # 在 ERB 主板上取消注释
interpolate: false                                  # 是否开启256微步插值
run_current: 0.55			                        # LDO 36STH20-1004AHG。与下面的宏匹配
hold_current: 0.2                                   # 电机保持运行电流值
sense_resistor: 0.110                               # 驱动采样电阻值（不要修改）默认是0.110欧姆
stealthchop_threshold: 0		                    # 静音阀值 0：Spreadcycle模式（适用于挤出机）

# 如果你使用TMC并希望能够使用无限位归零到喷嘴，请取消下面两行的注释
#diag_pin: E_DIAG			# 设置为连接到TMC DIAG引脚的MCU引脚，用于挤出机
#driver_SGTHRS: 100			# 255是最敏感的值，0是最不敏感的


# 注意：在文件中稍早的 [mmu_config_setup] 行将自动获取所需的 [extruder] 步进电机配置
# 选项，因此你现在只需要添加补充选项，如终点开关！
# 但是，如果你决定在这里定义打印机的挤出机步进电机，则有效的配置选项仅限于：
#    step_pin, dir_pin, enable_pin, rotation_distance, gear_ratio, 
#    microsteps, full_steps_per_rotation
#    pressure_advance, pressure_advance_smooth_time
# 其他选项请保留在 [extruder] 配置中
[manual_extruder_stepper extruder]
step_pin: sb2040:gpio9                              # 电机脉冲引脚设置
dir_pin: !sb2040:gpio10                             # 电机方向引脚设置，可以通过添或删除引脚前面的!来改变电机的运转方向
enable_pin: !sb2040:gpio7                           # 电机使能引脚设置，引脚在pin之前应带有“!”
gear_ratio: 50:10							        # 齿轮比（BMG为50:17，SB为50：10输出轴：输入轴） 
microsteps: 64 				                        # 推荐设置 8或者16. 避免 'Timer too close' error 
full_steps_per_rotation: 200		                # 电机单圈所需脉冲数（1.8度电机:200，0.9度电机:400）

##  挤出长度校准
##	如果你想挤出100mm的料，但实际挤出了98mm
##	rotation_distance = <下行旧_rotation_distance 值> * <实际挤出量> / <目标挤出量>
##	rotation_distance = 22.6789511 * 98 / 100
##  22.6789511 是个比较好的初始值，修改下行代码后去掉代码前的注释符
rotation_distance: 22.6556595                       # 挤出值
pressure_advance_smooth_time: 0.001                 # 压力提前平滑时间

# 取消下面两行的注释以启用将“触摸”归位选项应用于喷嘴！
#extra_endstop_pins: tmc2209_extruder:virtual_endstop
#extra_endstop_names: mmu_ext_touch


# 耗材齿轮步进电机  ---------------------------------------------------------------------------------------------
# 注意，如果定义了工具头传感器，将自动添加 'mmu toolhead' 终止开关
# 默认值经过测试适用于 BOM NEMA14 电机。请根据您使用的电机调整这些值
# 例如：对于 NEMA17 电机，通常会使用更高的电流
[tmc2209 manual_extruder_stepper gear_stepper]
uart_pin: mmu:gpio9                                 # uart通讯端口Pin脚定义
interpolate: true                                   # 是否开启256微步插值
run_current: 0.5			                        # NEMA14 电机
hold_current: 0.1                                   # 电机保持运行电流值
sense_resistor: 0.110                               # 驱动采样电阻值（不要修改）默认是0.110欧姆
stealthchop_threshold: 0		                    # 静音阀值 0：Spreadcycle模式（适用于挤出机）
# 如果您有 TMC 电机并希望使用齿轮电机进行 "touch" 归位，请取消注释下面的两行
# diag_pin: ^mmu:MMU_GEAR_DIAG                      # 设置为连接到齿轮电机 TMC DIAG 引脚的 MCU 引脚
# driver_SGTHRS: 60                                 # 255 是最敏感的值，0 是最不敏感的值

[manual_extruder_stepper gear_stepper]
step_pin: mmu:gpio7                                 # 电机脉冲引脚设置
dir_pin: !mmu:gpio8                                 # 电机方向引脚设置，可以通过添或删除引脚前面的!来改变电机的运转方向
enable_pin: !mmu:gpio6                              # 电机使能引脚设置，引脚在pin之前应带有“!”
gear_ratio: 50:17                                   # 齿轮比（BMG齿轮比为50：17，输出轴在前，输入轴在后）
microsteps: 16                                      # 推荐 8 或 16。尝试两者以避免 Klipper 的 'Timer too close' 错误（也尝试调整 num_moves）
full_steps_per_rotation: 200                        # 1.8 度电机为 200，0.9 度电机为 400
velocity: 100                                       # 最大回抽速度
accel: 400                                          # 最大回抽加速度

##  挤出长度校准
##	如果你想挤出100mm的料，但实际挤出了98mm
##	rotation_distance = <下行旧_rotation_distance 值> * <实际挤出量> / <目标挤出量>
##	rotation_distance = 22.6789511 * 98 / 100
##  22.6789511 是个比较好的初始值，修改下行代码后去掉代码前的注释符
rotation_distance: 22.213836                        # 挤出值

# 如果要启用齿轮电机进行 "touch" 归位选项，请取消注释下面的两行
# extra_endstop_pins: tmc2209_gear_stepper:virtual_endstop
# extra_endstop_names: mmu_gear_touch

# 选择器电机  --------------------------------------------------------------------------------------------------------
[tmc2209 manual_mh_stepper selector_stepper]
uart_pin: mmu:gpio0                                 # uart通讯端口Pin脚定义
# uart_address: 1                                     # 在 ERB 主板上取消注释
run_current: 0.4                                    # NEMA14 电机
hold_current: 0.2                                   # 如果不使用触摸归位或移动（TMC stallguard），可以设置得更小
interpolate: True                                   # 是否开启256微步插值
sense_resistor: 0.110                               # 驱动采样电阻值（不要修改）默认是0.110欧姆
stealthchop_threshold: 100                          # 使用 stealthchop 进行归位（较慢速度）效果最佳
# 如果您有 TMC 电机并希望使用选择器进行 "touch" 移动和归位，请取消注释下面的两行
# diag_pin: ^mmu:MMU_SEL_DIAG                       # 设置为连接到选择器电机 TMC DIAG 引脚的 MCU 引脚
# driver_SGTHRS: 75                                 # 255 是最敏感的值，0 是最不敏感的值

[manual_mh_stepper selector_stepper]
step_pin: mmu:gpio2                                 # 电机脉冲引脚设置
dir_pin: !mmu:gpio1                                 # 电机方向引脚设置，可以通过添或删除引脚前面的!来改变电机的运转方向
enable_pin: !mmu:gpio3                              # 电机使能引脚设置，引脚在pin之前应带有“!”
rotation_distance: 40                               # 主动带轮周长mm（2GT-20T带轮40，2GT-16T带轮32）
microsteps: 16                                      # 不需要高精度
full_steps_per_rotation: 200                        # 1.8 度电机为 200，0.9 度电机为 400
velocity: 200                                       # 最大速度
accel: 1200                                         # 最大加速度
endstop_pin: !mmu:gpio20                            # 选择器限位开关引脚
endstop_name: mmu_sel_home                          # 限位开关名称
# 如果要提供选择器 "touch" 移动和归位选项，请取消注释下面的两行
# extra_endstop_pins: tmc2209_selector_stepper:virtual_endstop
# extra_endstop_names: mmu_sel_touch

# 工具头传感器  ---------------------------------------------------------------------------------------------------------
# 取消注释此部分以启用工具头传感器支持。只需定义开关引脚；其他常规的
# filament_switch 选项与 MMU 操作不兼容，将干扰 MMU 操作。注意，这将自动
# 定义 "mmu_toolhead" 终止开关（归位点）以进行加载和卸载
## MMU Toolhead sensor START
[filament_switch_sensor toolhead_sensor]
switch_pin: sb2040:gpio29

# 舵机设置 -----------------------------------------------------------------------------------------------------------
# 基本舵机 PWM 设置。如果更改这些值，不同位置的角度定义也会更改
[mmu_servo mmu_servo]
pin: mmu:gpio21
maximum_servo_angle: 180
minimum_pulse_width: 0.001                          # 0.00085# 最小脉冲宽度时间（秒）默认值为0.001
maximum_pulse_width: 0.002                          # 0.00215# 最大脉冲宽度时间（秒）默认值为0.002

# ENCODER -----------------------------------------------------------------------------------------------------------------
# 编码器用于测量距离，监测堵塞和堵塞情况，并不断计算流速的百分比。
# 请注意，encoder_resolution仅仅是一个用于启动的默认值。它通过校准进行设置，并存储在mmu_vars.cfg文件中。
[mmu_encoder mmu_encoder]
encoder_pin: ^mmu:gpio15                            # EASY-BRD: ^PA6, Flytech ERB: ^gpio22
encoder_resolution: 0.674536                        # 这只是一个起始值。可以在mmm_vars.cfg中使用`mmu_encoder_resolution`进行覆盖
desired_headroom: 5.0                               #8 # MMU将尝试维持的堵塞或堵塞头程（最接近触发运行耗尽的MMU距离）
average_samples: 4                                  # 上次测量的"阻尼"效应。较高的值意味着堵塞长度变化较慢
flowrate_samples: 20                                #10 # 用于流速计算的编码器上要测量的"movements"数量

