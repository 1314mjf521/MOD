[mmu]
# 厂商和版本配置对于定义MMU的功能非常重要
# ERCF
# 1.1 原始设计，为Sprigy添加"s"后缀，为Binky添加"b"后缀，为Triple-Decky添加"t"后缀
#     例如："1.1sb"表示v1.1与Springy模块和Binky编码器
# 2.0 新的社区版 ERCF
# Tradrack
#  - 即将推出
# Prusa
#  - 即将推出
mmu_vendor: ERCF						# MMU家族
mmu_version: 1.1						# MMU硬件版本号（添加上面文档中的后缀）
mmu_num_gates: 9 						# 选择器门的数量


# 舵机配置  -----------------------------------------------------------------------------------------------------
# 伺服的三个命名位置的角度：
#   up   = 选择工具并允许丝材自由通过门
#   down = 夹持丝材
#   move = 准备好伺服以进行选择器移动（可选 - 默认为up）
# 请注意，将伺服保持在down位置可能会对电子元件造成压力，不建议在EASY-BRD或ERB板上使用，除非5V电源已经改进，并且在标准ERCF构建中不是必需的。
# 请确保您的硬件适合此任务！
servo_up_angle: 180						# 默认：MG90S伺服：Up=30    ; SAVOX SH0255MG：Up=140
servo_down_angle: 0						# 默认：MG90S伺服：Down=140 ; SAVOX SH0255MG：Down=30
servo_move_angle: 180					# 选择器移动时使用的可选角度（默认为up位置）
servo_duration: 0.2						# 发送到伺服的PWM脉冲的持续时间（自动关闭）
servo_active_down: 0					# 警告：1 = 强制伺服保持在down位置，0 = 移动后释放

# 日志  -----------------------------------------------------------------------------------------------------
# log_level和logfile_level可以设置为以下之一（0 = 基本，1 = 信息，2 = 调试，3 = 跟踪，4 = 开发人员）
# 通常，您可以将控制台日志保持最小，同时仍将调试输出发送到mmu.log文件
# 增加控制台日志级别仅在初始设置期间真正有用，以避免不断打开日志文件、
log_level: 1
log_file_level: 3						# 也可以设置为-1以完全禁用日志文件
log_statistics: 1						# 1以在每次工具更换时记录统计信息（默认值），0以禁用（但仍然记录）
log_visual: 2							# 1记录丝材的可视表示，2压缩形式（默认），0禁用
log_startup_status: 1					# 是否在启动时记录工具到门的状态，1 = 摘要（默认），2 = 完整，0 = 禁用

# 运动速度 -----------------------------------------------------------------------------------------------------------
# 长距离移动比短距离移动快，用于大部分的波登运动。注意，你可以设置两种快速加载速度，具体取决于MMU认为它是从缓冲区还是从卷轴中拉取。通常在从卷轴中拉取时使用较低的速度，因为需要更多的力来克服摩擦，从而防止丢失步进。使用100mm/s速度可能会较"安静"，适用于NEMA14电机或NEMA17薄型电机，但你可以更低以获得更低噪音
# 注意：编码器在超过250mm/s时不能跟上，因此请确保在非常高速度下关闭`bowden_apply_correction`！
gear_from_buffer_speed: 50 #160     	# mm/s 保守值为100mm/s，最大约为350mm/s
gear_from_spool_speed: 50       		# mm/s 在首次从闸门中加载时使用（较低）速度（即从卷轴中拉取）
gear_short_move_speed: 50       		# mm/s 保守值为35mm/s，最大约为100mm/s
gear_homing_speed: 50           		# mm/s 齿轮步进电机仅用于归位移动（例如挤出机归位）

# 挤出机移动速度。当齿轮和挤出机步进电机同步移动时将使用“同步”速度
extruder_load_speed: 15         		# mm/s 从归位位置到熔融区内挤出机的加载移动速度
extruder_unload_speed: 20       		# mm/s 挤出机内卸载移动速度（熔融区内的最初移动为此速度的50%）
extruder_sync_load_speed: 20    		# mm/s 同步挤出机加载移动速度
extruder_sync_unload_speed: 25  		# mm/s 同步挤出机卸载移动速度
extruder_homing_speed: 20       		# mm/s 仅用于挤出机归位移动的速度（例如到工具头传感器）

# 选择器移动速度
selector_move_speed: 200        		# mm/s 选择器移动速度（非触摸）
selector_homing_speed: 60       		# mm/s 初始选择器归位移动速度（非触摸）
selector_touch_speed: 80        		# mm/s 所有触摸选择器移动的速度（如果已配置stallguard）
selector_touch_enable: 0        		# 如果选择器触摸操作可能被禁用，此选项可用于禁用它，1=启用，0=禁用

# 编码器加载/卸载 ---------------------------------------------------------------------------------------------------
# 这些设置控制在闸门中加载和卸载丝杆的可选编码器
encoder_unload_buffer: 50       		# 减小快速卸载的量，以使精确的编码器卸载有足够的空间进行操作
encoder_load_retries: 2         		# MMU尝试在初始加载时抓取丝杆的次数（最大为5）
encoder_parking_distance: 30			# 高级选项：如果指定，控制在闸门中的停车位置（距离编码器的距离，范围=12-30）

# 波登管装载/卸载 --------------------------------------------------------------------------------------------
# 除了不同的波登装载速度适用于缓冲和非缓冲的丝材外，还可以检测到由于"急刹车"而引起的步进电机丢步问题。
# 如果启用波登校正，驱动器将相信编码器读数并进行校正移动，以将丝材移动到距离波登位置末端的 'load_bowden_tolerance' 内
# （这需要可靠的编码器，并且不建议在非常高的加载速度 >200mm/s下使用）
bowden_apply_correction: 0				# 1 启用，0 禁用（默认）
bowden_load_tolerance: 20.0				# 校正移动尝试接近目标的最近距离（以毫米为单位）
bowden_num_moves: 1						# 在装载或卸载波登时要进行的快速移动的次数（如果有TTC错误，则可以大于1）

# 挤出机入口检测/归位 ---------------------------------------------------------------------------------------
# 如果不使用工具传感器（归位端点），驱动器可以通过与挤出机齿轮碰撞来"感知"其进入，并因此需要知道尝试归位的最远距离。
# 由于这种方法不是完全确定的，您可能需要通过调整TMC电流减小来找到您的设置的最佳效果。
# 此外，可以配置触摸（stallguard）感测，但不幸的是与外部EASY-BRD或ERB mcu的兼容性不佳。
# 在碰撞检测期间减小电流还可以防止丝材磨损。
extruder_homing_max: 50					# 尝试归位挤出机时最大前进距离
extruder_homing_endstop: collision		# 丝材归位方法/端点名称（"mmu_gear_touch" 用于 stallguard）或 "collision"
extruder_homing_current: 40				# 在归位挤出机时使用的挤出机电流（10%-100%）（100 禁用）

# 在没有工具传感器的情况下，Happy Hare将自动默认为挤出机入口检测，无论此设置如何，
# 但如果您有工具传感器，您仍然可以强制执行额外的（不必要且不建议的）步骤，即首先归位到挤出机入口，
# 然后再归位到工具传感器。
extruder_force_homing: 0


# 内置默认的工具头加载和卸载序列 -------------------------------------------------------------------------
# 可以定义高度定制的加载和卸载序列，但是除非您有专门的设置，否则选择内置的工具头加载和卸载序列可能会更容易，因为它已经提供了高度的定制性。
# 如果您需要更多控制，请编辑mmu_software.cfg中的_MMU_LOAD_SEQUENCE和__MMU_UNLOAD_SEQUENCE宏，但请小心！
# MMU必须有一个已知的点位于波登管的末端，以便可以精确地加载挤出机。一般来说，这要么是挤出机入口（由上面的设置控制），要么是通过工具头传感器归位。
# 如果您有工具头传感器，它位于挤出机齿轮之后，驱动程序需要知道最大距离（从波登管末端移动）以尝试归位。
toolhead_homing_max: 40					# 尝试归位到工具头传感器的最大距离

# 一旦确定了归位位置，Happy Hare需要知道到喷嘴的最终移动距离。如果是归位到工具头传感器，这将是从工具头传感器到喷嘴的距离。
# 如果是挤出机归位，这将是从挤出机齿轮到喷嘴的距离。设置适合您的设置的适当参数。
# 可以通过手动将丝杆插入到归位点（挤出机齿轮或工具头传感器）并逐次推进1-2mm，直到开始从喷嘴挤出来来确定这个值。从该距离减去1-2mm以得到这个值。如果您的清洁塔有较大的间隙，增加这个值。如果有斑点，减小这个值。这个值将取决于您的挤出机，热端和喷嘴设置。
# （注意这两者之间的差值表示挤出机到传感器的距离，并用作最终从挤出机卸载的距离。准确的设置可以减少喷头从挤出机退出时的噪音/磨损）
toolhead_extruder_to_nozzle: 22			#72	# 例如，使用挤出机归位的Revo Voron与CW2挤出机
toolhead_sensor_to_nozzle: 12			#62	# 例如，使用工具头传感器归位的Revo Voron与CW2挤出机

# 检测挤出机成功加载是否被视为错误或警告。某些挤出机设计具有较短的最终移动距离，可能不会被编码器捕捉到并导致虚假错误。这允许屏蔽这些错误。然而，错误通常表示您的挤出机加载速度对于丝杆上的摩擦来说过高，这种情况下屏蔽错误不是一个好主意。首先尝试减少摩擦、同步电机和降低速度！
toolhead_ignore_load_error: 0

# 同步加载：通常建议使用同步齿轮和挤出机电机加载工具头。
toolhead_sync_load: 1					# 挤出机加载利用电机同步

# 但是，如果禁用了同步加载，则还有两个设置可以帮助成功地将丝杆从波登管通过挤出机入口进入工具头
toolhead_transition_length: 10			# mm，用于非同步加载时进出挤出机的特殊处理。设置为0以禁用
toolhead_delay_servo_release: 2.0		# 在过渡到工具头时，如果不使用同步加载，则延迟释放伺服（毫米）

# 同步卸载：建议不要在卸载过程中启用同步电机，因为（i）它使得更难检测卡住的丝杆，（ii）它会导致额外的噪音，（iii）可能会“过度卸载”。然而，如果您的挤出机无法卸载，可以使用它
toolhead_sync_unload: 1					# 挤出机卸载（除了独立的喷头成形）利用电

# 同步齿轮/挤出器运动和喷嘴成型 ----------------------------------------------------------------------
# 这个控制是否在打印操作期间同步挤出器和齿轮步进电机
# 如果您通常以最大齿轮步进电机电流运行，请考虑使用'sync_gear_current'来减少电流
# 如果配备了TMC驱动器，可以控制齿轮和挤出器电机的电流以优化性能。
# 这在使用同步电机打印时控制齿轮步进电机温度非常有用，以确保在快速成型喷嘴移动过程中不会跳步。
sync_to_extruder: 1            			# 在打印期间，齿轮电机与挤出器同步
sync_gear_current: 50           		# 同步打印时使用的齿轮步进电机电流的百分比（10% - 100%）
sync_form_tip: 1               			# 在独立成型喷头时进行同步（卸载的初始部分）

# 喷嘴成型通常由切片器（在打印中）和独立宏（不在打印中）共同负责。虽然可以为每次换工具选择选项，
# 但设置'force_form_tip_standalone: 1'将始终执行独立成型序列。
# 通常，这对于这一普遍快速移动很有用
extruder_form_tip_current: 100      	# 在成型喷嘴时使用的挤出器电流的百分比（100% - 150%）（设置为100以禁用）
force_form_tip_standalone: 1       		# 0 = 默认智能行为，1 = 始终执行独立成型喷头（切片器关闭时执行）

# 阻塞检测和无限卷筒 ---------------------------------------------------------------------------------------
# 选择器（stallguard）操作。如果配置为无传感器归位，MMU可以检测到堵塞的传送带路径并尝试自动恢复，
# 但这更慢，更难设置（无传感器仍需要物理终止开关）
# 通过在selector_stepper上定义stallguard归位并在mmu_hardware.cfg中设置物理终止开关引脚来设置此功能
enable_clog_detection: 2    			# 0 = 禁用，1 = 静态长度阻塞检测，2 = 自动长度阻塞检测
enable_endless_spool: 1    				# 0 = 禁用无限卷筒，1 = 启用无限卷筒（需要阻塞检测）
enable_spoolman: 0         				# 0 = 禁用spoolman支持，1 = 启用spoolman（需要spoolman设置）

# 启动行为 -------------------------------------------------------------------------------------------------------
# MMU可以基于以前的持久状态自动初始化。有5个级别，每个级别都引入了
# 额外的状态信息，需要逐渐减少初始设置。较高级别假定您在离线时不会触摸
# MMU，并且可以精确地恢复到离开的地方！如果您触摸它或感到困惑
# 然后发出适当的复位命令（例如，MMU_RESET）以将状态恢复到默认状态。
# 如果在级别2及以上使用持久状态，建议启用`startup_status`
# 级别：0 = 每次都从头开始，除了校准数据（以前的默认行为）
# 1 = 恢复持久的无限卷筒组
# 2 = 此外，恢复持久的工具到门映射
# 3 = 此外，恢复持久的门状态（可用的传料、材料和颜色、spoolID）（默认）
# 4 = 此外，恢复持久的工具、门和传送带位置！（当MMU正常工作时建议使用）
persistence_level: 3


# 可配置的杂项值，但基本固定值 -------------------------------------------------------------
extruder: extruder					# 使用MMU的工具头挤出器的名称
timeout_pause: 72000				# 处于MMU暂停状态时的闲置超时时间（秒）
disable_heater: 600					# 在MMU_PAUSE状态下的一段时间后，关闭热端加热器（秒）
default_extruder_temp: 240			# 执行换丝和打印之外的温度的基线温度
z_hop_height_error: 5				# 暂停时进行z_hop移动以避免对打印产生影响的高度（毫米）
z_hop_height_toolchange: 5			# 在工具切换或耗尽时进行z_hop移动以避免对打印产生影响的高度（毫米）
z_hop_speed: 15						# z_hop移动的速度（毫米/秒）
slicer_tip_park_pos: 0				# 这指定了割丝器进行形成移动后的挤出器内的丝材位置
gcode_load_sequence: 0				# 高级设置：Gcode加载顺序，1=启用，0=内部逻辑（默认）
gcode_unload_sequence: 0			# 高级设置：Gcode卸载顺序，1=启用，0=内部逻辑（默认）
auto_calibrate_gates: 0				# 自动门（非门#0）校准。1=首次加载时自动校准，0=禁用
strict_filament_recovery: 0			# 如果与具有工具头传感器的MMU一起启用，将导致丝材位置恢复执行额外的移动，
									# 以查找在挤出器后传感器前的空间中困住的丝材
retry_tool_change_on_error: 0		# 是否自动重试失败的工具切换。如果启用，Happy Hare将执行相当于'MMU_RECOVER' + 'Tx'命令，
									# 通常足以恢复。请注意，启用此选项可能会掩盖MMU的问题
print_start_detection: 1			# 启用Happy Hare自动检测打印的开始和结束，并调用_MMU_START_PRINT和_MMU_END_PRINT。
									# 如果要包含在您自己的宏中，请禁用此选项

# 高级设置：MMU宏覆盖 --- 仅在您熟悉KLIPPER宏的情况下设置 -----------------------------------
# 当需要暂停打印或MMU操作时，Happy Hare默认会调用`PAUSE`宏。如果您希望有额外的行为，您可以覆盖Happy Hare调用的宏。
# 一些可能需要此功能的示例：
# 1. 您正在使用稀疏的清洗塔，并希望Happy Hare错误时停在清洗塔上方，以避免碰到清洗塔和正常暂停位置之间的模型。
# 2. 您希望额外调用一个宏，以在换丝错误时发送推送通知。
# 3. 您希望为默认的暂停宏或您自己的宏设置额外的静态参数。
# 重要提示：您调用的宏必须最终使打印机处于暂停状态。否则会导致打印失败、卡住和硬件故障。
#pause_macro: PAUSE

# 当Happy Hare被要求形成一个喷嘴时，它将运行此宏。如果您想用一个切割丝线的宏替代它，更改它可能很方便。
# 重要提示：因为Happy Hare在工具喷嘴过程中观察丝线移动以确定park_position的位置，如果您切割了丝线，您必须通过设置`output_park_pos`变量来覆盖此行为。
# 可以使用以下结构在G代码中动态设置值：
# SET_GCODE_VARIABLE MACRO=_MMU_FORM_TIP_STANDALONE VARIABLE=output_park_pos VALUE=-1
form_tip_macro:_MMU_CUT_TIP
#  _MMU_FORM_TIP_STANDALONE

# 高级设置：重新初始化行为 --- 仅在真正需要非默认初始化时设置 ----------------------------
# Happy Hare具有高级功能，包括：
# 1. 管理工具与门之间的映射，以便重新映射不正确的卷轴或将所有工具映射到一个门以进行单色打印！
# 2. 记录每个门中的丝线存在状态（2=来自缓冲区，1=来自卷轴，0=空）。
# 3. 每个门中加载的丝线材料
# 4. 每个门中的丝线颜色
# 5. 将门（卷轴）分组为无尽卷轴组

# 通常情况下，这些值将随着时间动态设置，并自动保存到'mmu_vars.cfg'。当您启动MMU时，这些值将被加载。
# 但是，如果您明确通过其中一个重置命令重置MMU状态，这些值将恢复到默认值。系统默认值通常为空，或在TTG映射的情况下，Tx与门#x的一对一映射，或没有无尽卷轴组。
# 但是，您可以选择在此处定义起始值。
# 重要提示：值的数组必须与您的MMU上的门数相同，否则将被拒绝。

# 这组设置共同形成默认的门映射，可以使用`MMU_GATE_MAP`命令或类似的命令来更新。
# 它们必须都与门数（0 .. n）相同的长度。
# 请注意，这些是默认值，将被'mmu_vars.cfg'中的保存值覆盖。

# 1. 工具到门的默认映射。如果未指定或注释掉，映射将默认为Tx = 门#x。
#    'MMU_RESET_TTG_MAP'将恢复到这些默认值。'MMU_REMAP_TTG'将在使用过程中进行修改和持久化。
tool_to_gate_map: 0, 1, 2, 3, 4, 5, 6, 7, 8

# 2. 门是否有可用的丝线（2=来自缓冲区，1=来自卷轴，0=空）。如果未指定或注释，系统将默认为所有门处于未知状态。
#    'MMU_GATE_MAP'用于在使用过程中进行调整和持久化。
gate_status: 1, 1, 1, 1, 0, 0, 0, 0, 0

# 3. 同样，这指定了每个门中存在的材料类型。如果未指定或注释，名称将为空。
#    'MMU_GATE_MAP'用于在使用过程中进行调整和持久化。
gate_material: PETG, PETG, PETG, PETG, , , , , 

# 4. 同样，这指定了每个门中丝线的颜色。如果未指定或注释，颜色将为默认颜色。
#    颜色可以是w3c颜色名称或RRGGBB（不带前导#）。
#    'MMU_GATE_MAP'用于在使用过程中进行调整和持久化。
# gate_color: red, orange, yellow, green, blue, indigo, violet, ffffff, black

# 5. 如果启用了无尽线轴（endless spool），您应该在这里定义一个EndlessSpool分组的列表，每个分组对应您MMU中的一个挡板
#    当一个挡板上的丝料用完时，系统将自动切换到具有相同组号的下一个挡板
#    例如，如果设置为1, 2, 3, 1, 2, 3, 1, 2, 3，对于一个包含9个挡板的MMU，如果在挡板＃0上发生了用料完的情况
#    系统将自动切换到挡板＃3，然后是挡板＃6，同时系统将动态调整工具映射关系。
#    请注意，如果使用'MMU_ENDLESS_SPOOL_GROUPS'命令在'mmu_vars.cfg'中修改了此值，将会覆盖这里的设置
#endless_spool_groups: 1, 2, 3, 1, 2, 3, 1, 2, 3

# 6. 如果spoolman（线轴管理器）正在运行，您可以在这里定义挡板到线轴ID的关系
#gate_spool_id: 3, 2, 1, 4, 5, 6, 7, 8, 9

# 为了完整性和主要是为了历史原因而不是实用性，可以指定选择器上每个挡板的默认位置
# 以及可选的旁路位置。只有在删除'mmu_vars.cfg'时才会使用这些值
selector_offsets: 0.0, 17.7, 35.2, 51.2, 68.8, 85.6, 102.4, 119.2, 137.6
#selector_bypass: 123.4			# 设置为您测量得到的位置，如果不使用旁路功能请设置为0
