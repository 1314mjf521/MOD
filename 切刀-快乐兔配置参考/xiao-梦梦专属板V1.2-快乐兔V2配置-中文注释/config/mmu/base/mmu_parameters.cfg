[mmu]
#
# The vendor and version config is important to define the capabiliies of the MMU
#
# ERCF
# 1.1 original design, add "s" suffix for Sprigy, "b" for Binky, "t" for Triple-Decky
#     e.g. "1.1sb" for v1.1 with Spriny mod and Binky encoder
# 2.0 new community edition ERCF
#
# Tradrack
#  - Comming soon
#
# Prusa
#  - Comming soon
#
mmu_vendor: ERCF			# MMU family
mmu_version: 1.1			# MMU hardware version number (add mod suffix documented above)
mmu_num_gates: 11 			# Number of selector gates


# Servo configuration  -----------------------------------------------------------------------------------------------------
#
# Angle of the servo in three named positions:
#   up   = tool is selected and filament is allowed to freely move through gate
#   down = to grip filament
#   move = ready the servo for selector move (optional - defaults to up)
#
# Note that leaving the servo active when down can stress the electronics and is not recommended with EASY-BRD or ERB board
# unless the 5v power supply has been improved and it is not necessary with standard ERCF build.
# Make sure your hardware is suitable for the job!
#

# 伺服配置-------------------------------------------------------- -------------------------------------------------- ----
#
# 三个指定位置的舵机角度：
# up = 选择工具并且允许灯丝自由移动通过浇口
# down = 抓住灯丝
# move = 准备伺服器以进行选择器移动（可选 - 默认向上）
#
# 请注意，在停机时保持伺服处于活动状态会给电子设备带来压力，不建议与 EASY-BRD 或 ERB 板一起使用
# 除非 5v 电源已得到改进，并且标准 ERCF 构建不需要它。
# 确保您的硬件适合该工作！


servo_up_angle: 180		# Default: MG90S servo: Up=30    ; SAVOX SH0255MG: Up=140
servo_down_angle: 40			# Default: MG90S servo: Down=140 ; SAVOX SH0255MG: Down=30
servo_move_angle: 180			# Optional angle used when selector is moved (defaults to up position)/移动选择器时使用的可选角度（默认为向上位置）
servo_duration: 0.2			# Duration of PWM burst sent to servo (automatically turns off)/发送至伺服的 PWM 突发持续时间（自动关闭）
servo_active_down: 0			# CAUTION: 1=Force servo to stay active when down, 0=Release after movement/# 注意：1=强制伺服在下降时保持活动状态，0=移动后释放


# Logging ------------------------------------------------------------------------------------------------------------------
#
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = developer)
# Generally you can keep console logging to a minimal whilst still sending debug output to the mmu.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file
#

# 日志记录------------------------------------------------ -------------------------------------------------- ----------------
#
# log_level 和 logfile_level 可以设置为以下之一（0 = 基本、1 = 信息、2 = 调试、3 = 跟踪、4 = 开发人员）
# 通常，您可以将控制台日志记录保持在最低限度，同时仍将调试输出发送到 mmu.log 文件
# 增加控制台日志级别仅在初始设置期间真正有用，以节省必须不断打开日志文件的麻烦


log_level: 1
log_file_level: 3			# Can also be set to -1 to disable log file completely
log_statistics: 1 			# 1 to log statistics on every toolchange (default), 0 to disable (but still recorded)
log_visual: 2				# 1 log visual representation of filament, 2 compact form (default) , 0 disable
log_startup_status: 1			# Whether to log tool to gate status on startup, 1 = summary (default), 2 = full, 0 = disable


# Movement speeds ----------------------------------------------------------------------------------------------------------
#
# Long moves are faster than the small ones and used for the bulk of the bowden movement. Note that you can set two fast load
# speeds depending on whether MMU thinks it is pulling from the buffer or from the spool. It is often helpful to use a lower
# speed when pulling from the spool because more force is required to overcome friction and this prevents loosing steps.
# 100mm/s should be "quiet" with the NEMA14 motor or a NEMA17 pancake, but you can go lower for really low noise
# NOTE: Encoder cannot keep up much above 250mm/s so make sure `bowden_apply_correction` is off at very high speeds!
#
# 移动速度 ---------------------------------------------------------- -------------------------------------------------- ---------
#
# 长动作比小动作快，用于鲍登动作的大部分。 注意可以设置两个快速加载
# 速度取决于 MMU 认为它是从缓冲区还是从线轴中拉出。 使用较低的值通常会有所帮助
# 从线轴拉出时的速度，因为需要更大的力来克服摩擦，这可以防止松动。
# 对于 NEMA14 电机或 NEMA17 薄饼，100mm/s 应该是“安静”的，但您可以降低以获得真正的低噪音
# 注意：编码器无法保持超过 250mm/s 的速度，因此请确保在非常高的速度下关闭“bowden_apply_ Correction”！

gear_from_buffer_speed: 100		# mm/s Conservative value is 100mm/s, Max around 350mm/s
gear_from_spool_speed: 60		# mm/s Use (lower) speed when loading from a gate for the first time (i.e. pulling from spool)
gear_short_move_speed: 60		# mm/s Conservative value is 35mm/s. Max around 100mm/s
gear_homing_speed: 50			# mm/s Speed of gear stepper only homing moves (e.g. extruder homing)

# Speeds of extruder movement. The 'sync' speeds will be used when gear and extruder steppers are moving in sync
# 挤出机运动的速度。 当齿轮和挤出机步进器同步移动时，将使用“同步”速度

extruder_load_speed: 15			# mm/s speed of load move inside extruder from homing position to meltzone
extruder_unload_speed: 20		# mm/s speed of unload moves inside of extruder (very initial move from meltzone is 50% of this)
extruder_sync_load_speed: 20		# mm/s speed of synchronized extruder load moves
extruder_sync_unload_speed: 25		# mm/s speed of synchronized extruder unload moves
extruder_homing_speed: 20		# mm/s speed of extruder only homing moves (e.g. to toolhead sensor)

# Selector movement speeds
# 选择器移动速度
selector_move_speed: 120       	# mm/s speed of selector movement (not touch)
selector_homing_speed: 60       	# mm/s speed of initial selector homing move (not touch)
selector_touch_speed: 80		# mm/s speed of all touch selector moves (if stallguard configured)
enable_selector_touch: 0		# If selector touch operation is possible this can be used to disable it 1=enabled, 0=disabled


# Encoder loading/unloading ------------------------------------------------------------------------------------------------
#
# These setttings control the optional encoder to load and unload filament at the gate
#
# 编码器加载/卸载-------------------------------------------------------- -------------------------------------------------- -
#
# 这些设置控制可选编码器在门处加载和卸载灯丝

encoder_unload_buffer: 40		# Amount to reduce the fast unload so that accurate encoder unload has room to operate/减少快速卸载量，使编码器精确卸载有操作空间
encoder_load_retries: 3			# Number of times MMU will attempt to grab the filament on initial load (max 5)/MMU 在初始负载时尝试抓取灯丝的次数（最多 5 次）
encoder_parking_distance: 43.0		# Advanced: Controls parking postion in the gate (distance from encoder, range=12-30)/高级：控制门内的停车位置（距编码器的距离，范围=12-30）


# Bowden tube loading/unloading --------------------------------------------------------------------------------------------
#
# In addition to different bowden loading speeds for buffer and non-buffered filament it is possible to detect missed steps
# caused by "jerking" on a heavy spool. If bowden correction is enabled the driver with "believe" the encoder reading and
# make correction moves to bring the filament to within the 'load_bowden_tolerance' of the end of bowden position
# (this does require a reliable encoder and is not recommended for very high speed loading >200mm/s)
#
# 鲍登管装载/卸载-------------------------------------------------------- ------------------------------------------------
#
# 除了缓冲和非缓冲灯丝的不同鲍登加载速度之外，还可以检测遗漏的步骤
# 由重线轴上的“猛拉”引起。 如果启用 Bowden 校正，驱动程序将“相信”编码器读数并
# 进行校正移动，使灯丝处于鲍登位置末端的“load_bowden_tolerance”范围内
#（这确实需要可靠的编码器，不建议用于>200mm/s的超高速加载）


bowden_apply_correction: 1		# 1 to enable, 0 disabled (default)
# 修正动作将尝试达到目标的距离（以毫米为单位）
bowden_load_tolerance: 40.0		# How close in mm the correction moves will attempt to get to target
# # 装载或卸载 Bowden 时要进行的单独快速移动的数量
bowden_num_moves: 2			# Number of separate fast moves to make when loading or unloading bowden (>1 if you have TTC errors)


# Extruder entrance detection/homing ---------------------------------------------------------------------------------------
#
# If not using a toolhead sensor (homing endpoint) the driver can "feel" for the extruder gear entry by colliding with it
# and thus needs to know how far to attempt homing. Because this method is not completely deterministic you might find
# have to find the sweetspot for your setup by adjusting the TMC current reduction. Also, touch (stallguard) sensing is
# possible to configure but unfortunately doesn't work well with external EASY-BRD or ERB mcu's.
# Reduced current during collision detection can also prevent filament griding
#

# 挤出机入口检测/归位-------------------------------------------------------- -------------------------------------------
#
# 如果不使用工具头传感器（归位端点），驱动程序可以通过与其碰撞来“感觉”挤出机齿轮入口
# 因此需要知道尝试归航的距离。 因为此方法并不完全确定，您可能会发现
# 必须通过调整 TMC 电流减少来找到适合您的设置的最佳点。 此外，触摸（stallguard）感应是
# 可以配置，但遗憾的是不能与外部 EASY-BRD 或 ERB mcu 很好地配合使用。
# 碰撞检测时减少电流也可以防止灯丝网格化



extruder_homing_max: 30				# Maximum distance to advance in order to attempt to home the extruder
extruder_homing_endstop: collision	# Filament homing method/endstop name ("mmu_gear_touch" for stallguard) or "collision"
extruder_homing_current: 40		# % gear_stepper current (10%-100%) to use when homing to extruder homing (100 to disable)
#
# In the absence of a toolhead sensor Happy Hare will automatically default to extruder entrance detection regardless of
# this setting, however if you have a toolhead sensor you can still force the additional (unecessary and not recommended)
# step of homing to extruder entrance before then homing to the toolhead sensor


# 在没有工具头传感器的情况下，Happy Hare 将自动默认为挤出机入口检测，无论
# 此设置，但是如果您有工具头传感器，您仍然可以强制附加（不必要且不推荐）
# 先归位到挤出机入口，然后再归位到工具头传感器的步骤


extruder_force_homing: 0


# Built in default toolhead loading and unloading -------------------------------------------------------------------------
#
# It is possible to define highly customized loading and unloading sequences, however, unless you have a specialized setup
# it is probably easier to opt for the built-in toolhead loading and unloading sequence which already offers a high degree
# of customization. If you need even more control then edit the _MMU_LOAD_SEQUENCE and __MMU_UNLOAD_SEQUENCE macros in
# mmu_software.cfg - but be careful!
#
# An MMU must have a known point at the end of the bowden from which it can precisely load the extruder. Generally this will
# either be the extruder extrance (which is controlled with settings above) or by homing to toolhead sensor. If you have
# toolhead sensor it is past the extruder gear and the driver needs to know the max distance (from end of bowden move) to
# attempt homing
#
# 内置默认工具头加载和卸载 ------------------------------------------ -------------------------------------------
#
# 但是，除非您有专门的设置，否则可以定义高度自定义的加载和卸载序列
# 选择内置工具头加载和卸载顺序可能更容易，该顺序已经提供了很高的程度
# 定制数量。 如果您需要更多控制，请编辑 _MMU_LOAD_SEQUENCE 和 __MMU_UNLOAD_SEQUENCE 宏
# mmu_software.cfg - 但要小心！
#
# MMU 必须在鲍登末端有一个已知点，从该点可以精确地加载挤出机。 一般来说这会
# 可以是挤出机外置（由上述设置控制），也可以通过归位到工具头传感器。 如果你有
# 工具头传感器经过挤出机齿轮，驱动程序需要知道最大距离（从鲍登移动端开始）
# 尝试归航


toolhead_homing_max: 35			# Maximum distance to advance in order to attempt to home to toolhead sensor
#
# Once a homing position is determined, Happy Hare needs to know the final move distance to the nozzle. If homing to
# toolhead sensor this will be the distance from the toolhead sensor to the nozzle. If extruder homing it will be the
# distance from the extruder gears to the nozzle. Set the appropriate parameter for your setup
#
# This value can be determined by manually inserting filament to your homing point (extruder gears or toolhead sensor)
# and advancing it 1-2mm at a time until it starts to extrude from the nozzle.  Subtract 1-2mm from that distance distance
# to get this value.  If you have large gaps in your purge tower, increase this value.  If you have blobs, reduce this value.
# This value will depend on your extruder, hotend and nozzle setup.
# (Note that the difference between these two represents the extruder to sensor distance and is used as the final
# unload distance from extruder. An accurate setting can reduce tip noise/grinding on exit from extruder)

# 一旦确定了归位位置，Happy Hare 需要知道到喷嘴的最终移动距离。 如果归位到
# 工具头传感器 这将是从工具头传感器到喷嘴的距离。 如果挤出机归位，它将是
# 从挤出机齿轮到喷嘴的距离。 为您的设置设置适当的参数
#
# 该值可以通过手动将线材插入到归位点（挤出机齿轮或工具头传感器）来确定
# 并每次推进 1-2 毫米，直到它开始从喷嘴中挤出。 该距离减去1-2mm
# 获取这个值。 如果净化塔中有较大间隙，请增加该值。 如果有斑点，请减小该值。
# 该值取决于您的挤出机、热端和喷嘴设置。
#（请注意，这两者之间的差异代表挤出机到传感器的距离，并用作最终的
# 距挤出机的卸载距离。 准确的设置可以减少挤出机出口处的尖端噪音/研磨）

toolhead_extruder_to_nozzle: 75	 # E.g. Revo Voron with CW2 extruder using extruder homing
toolhead_sensor_to_nozzle: 50		# E.g. Revo Voron with CW2 extruder using toolhead sensor homing
#
# Whether the detection of successful extruder load is considered an error or warning. Some designs of extruder have a short
# final move distance that may not be picked up by encoder and cause false errors. This allows masking of those errors.
# However the error often indicates that your extruder load speed is too high for the friction on the filament and in
# that case masking the error is not a good idea. Try reducing friction, syncing motors and lowering speed first!

# 检测到成功的挤出机负载是否被视为错误或警告。 一些设计的挤出机有一个短路
# 编码器可能无法识别并导致错误的最终移动距离。 这可以掩盖这些错误。
# 然而，该错误通常表明您的挤出机负载速度对于长丝和内部的摩擦来说太高
# 这种情况掩盖错误不是一个好主意。 首先尝试减少摩擦、同步电机和降低速度！

toolhead_ignore_load_error: 0
#
# Synchronized loading: It is generally recommended to load the toolhead with synchronized gear and extruder motors.
# 同步加载：一般建议使用同步齿轮和挤出机电机加载工具头。
# 挤出机加载利用电机同步
toolhead_sync_load: 1			# Extruder loading leverages motor synchronization
#
# However, if synchronized loading is disabled, there are two more settings can aid successful transition of the filament
# from the bowden tube through the extruder entrance into the toolhead
# 但是，如果禁用同步加载，还有两个设置可以帮助灯丝成功过渡
# 从鲍登管通过挤出机入口进入工具头
# 毫米，在不同步时对挤出机的进入和退出进行特殊处理。 0 禁用
# 在转换到工具头期间不使用同步负载时，伺服系统延迟释放 (mm)

toolhead_transition_length: 10		# mm of special handling for entry and exit of extruder when not synced. 0 to disable
toolhead_delay_servo_release: 2.0	# Delay release on servo by (mm) when not using synchronous load during transition into toolhead
#
# Synchronized unloading: It is recommended not to enable synced motors during unloading because (i) it makes it harder to
# detect stuck filament, (ii) it can lead to additional noise, (iii) it is possible to "over unload". Nevertheless, it can
# be employed if you extruder struggles to unload
# 同步卸载：建议在卸载过程中不要启用同步电机，因为 (i) 这会使卸载变得更加困难
# 检测卡丝，(ii) 它可能导致额外的噪音，(iii) 可能“过度卸载”。 尽管如此，它还是可以
# 如果您的挤出机难以卸载，请使用它


toolhead_sync_unload: 0			# Extruder unloading (except stand alone tip forming) leverages motor synchronization


# Synchronized gear/extruder movement and tip forming ----------------------------------------------------------------------
#
# This controls whether the extruder and gear steppers are synchronized during printing operations
# If you normally run with maxed out gear stepper current consider reducing it with 'sync_gear_current'
# If equipped with TMC drivers the current of the gear and extruder motors can be controlled to optimize performance.
# This can be useful to control gear stepper temperature when printing with synchronized motor, to ensure no skipping during
# fast tip-forming moves
#
# 同步齿轮/挤出机运动和尖端成型---------------------------------------- ----------------------------
#
# 这控制打印操作期间挤出机和齿轮步进器是否同步
# 如果您通常以最大齿轮步进器电流运行，请考虑使用“sync_gear_current”减少它
# 如果配备 TMC 驱动器，可以控制齿轮和挤出机电机的电流以优化性能。
# 当使用同步电机打印时，这可用于控制齿轮步进温度，以确保打印过程中不跳步
# 快速形成尖端的动作

# 打印期间齿轮电机与挤出机同步
sync_to_extruder: 0			# Gear motor is synchronized to extruder during print
# 打印期间与挤出机同步时使用的 gear_stepper 电流百分比 (10%-100%)
sync_gear_current: 50			# % of gear_stepper current (10%-100%) to use when syncing with extruder during print
# 在独立尖端形成期间同步（卸载的初始部分）
sync_form_tip: 0			# Synchronize during standalone tip formation (initial part of unload)
#

# Tip forming responsibity is typically split between slicer (in-print) and standalone macro (not in-print). Whilst there is
# an option to choose for every toolchange, setting 'force_form_tip_standalone: 1' will always do the standalone sequence
# Often it is useful to increase the current for this generally rapid movement
#

# 提示形成责任通常分为切片器（印刷中）和独立宏（非印刷中）。 虽然有
# 为每个工具更改选择一个选项，设置“force_form_tip_standalone: 1”将始终执行独立序列
# 对于这种普遍快速的运动，增加电流通常很有用

#
extruder_form_tip_current: 100		# % of extruder current (100%-150%) to use when forming tip (100 to disable)
# 0 = 默认智能行为，1 = 始终进行独立尖端成形（关闭切片机！）
force_form_tip_standalone: 1		# 0 = Default smart behavor, 1 = Always do standalone tip forming (TURN SLICER OFF!)


# Clog detection and Endless Spool ---------------------------------------------------------------------------------------
# Selector (stallguard) operation. If configured for sensorless homing MMU can detect blocked filament path and try to recover
# automatically but it is slower and more difficult to set up (sensorless still requires the physical endstop switch)
# This is setup by defining stallguard homing on the selector_stepper and setting the physical endstop pin in mmu_hardware.cfg
#

# 堵塞检测和无尽线轴-------------------------------------------------------- -------------------------------------------
# 选择器（stallguard）操作。 如果配置为无传感器归位 MMU 可以检测阻塞的灯丝路径并尝试恢复
# 自动但更慢且更难以设置（无传感器仍然需要物理终点开关）
# 这是通过在selector_stepper上定义stallguard归位并在mmu_hardware.cfg中设置物理endstop引脚来设置的
# 0 = 禁用，1 = 静态长度堵塞检测，2 = 自动长度堵塞检测
enable_clog_detection: 0	# 0 = disable, 1 = static length clog detection, 2 = automatic length clog detection
# 0 = 禁用无限线轴，1 = 启用无限线轴（需要堵塞检测）
enable_endless_spool: 0		# 0 = disable endless spool,  1 = enable endless spool (requires clog detection)


# Turn on behavior -------------------------------------------------------------------------------------------------------
# MMU can auto-initialize based on previous persisted state. There are 5 levels with each level bringing in
# additional state information requiring progressively less inital setup. The higher level assume that you don't touch
# MMU while it is offline and it can come back to life exactly where it left off!  If you do touch it or get confused
# then issue an appropriate reset command (E.g. MMU_RESET) to get state back to the defaults.
# Enabling `startup_status` is recommended if you use persisted state at level 2 and above
# Levels: 0 = start fresh every time except calibration data (the former default behavior)
#         1 = restore persisted endless spool groups
#         2 = additionally restore persisted tool-to-gate mapping
#         3 = additionally restore persisted gate status (filament availability, material and color) (default)
#         4 = additionally restore persisted tool, gate and filament position! (Recommended when MMU is working well)
#

# 开启行为 ---------------------------------------------------------- -------------------------------------------------- --------
# MMU 可以根据之前的持久状态自动初始化。 有 5 个级别，每个级别都会引入
# 需要逐渐减少初始设置的附加状态信息。 更高级别假设你不碰
# 当 MMU 处于离线状态时，它可以准确地从上次中断的地方恢复过来！ 如果您确实触摸了它或感到困惑
# 然后发出适当的重置命令（例如 MMU_RESET）以使状态恢复到默认值。
# 如果您使用级别 2 及以上的持久状态，建议启用 `startup_status`
# 级别：0 = 除校准数据外每次都重新开始（以前的默认行为）
# 1 = 恢复持久的无限线轴组
# 2 = 另外恢复持久的工具到门的映射
# 3 = 另外恢复持久的门状态（灯丝可用性、材料和颜色）（默认）
# 4 = 另外恢复持久的工具、浇口和灯丝位置！ （MMU运行良好时推荐）
#


persistence_level: 3


# Misc configurable, but fairly fixed values -----------------------------------------------------------------------------
#
extruder: extruder		# Name of the toolhead extruder that MMU is using
timeout_pause: 72000		# Time out in seconds used by the MMU_PAUSE
disable_heater: 600		# Delay in seconds after which the hotend heater is disabled in the MMU_PAUSE state
min_temp_extruder: 190	# Used to ensure we can move the extruder and form tips
z_hop_height: 5			# Height in mm of z_hop move on pause or runout to avoid blob on print
z_hop_speed: 15			# mm/s Speed of z_hop move
# 这指定了切片器尖端成形移动后挤出机中长丝的位置
slicer_tip_park_pos: 0		# This specifies the position of filament in extruder after slicer tip forming move
# 高级：Gcode 加载顺序 1=启用，0=内部逻辑（默认）
gcode_load_sequence: 0		# Advanced: Gcode loading sequence 1=enabled, 0=internal logic (default)
# 高级：Gcode 卸载序列，1=启用，0=内部逻辑（默认）
gcode_unload_sequence: 0	# Advanced: Gcode unloading sequence, 1=enabled, 0=internal logic (default)
# 自动门（不是门#0）校准。 1=首次加载时校准，0=禁用
auto_calibrate_gates: 1		# Automated gate (not gate#0) calibration. 1=calibrated on first load, 0=disabled
# 如果使用工具头传感器为“1”，将查找在挤出机之后、传感器之前滞留的细丝
strict_filament_recovery: 1	# If '1' with toolhead sensor, will look for filament trapped after extruder but before sensor





# Advanced: MMU macro overrides --- ONLY SET IF YOU'RE COMFORTABLE WITH KLIPPER MACROS -----------------------------------
#
# When a print or the MMU should be paused, Happy Hare will call the `PAUSE` macro by default. If you want additional
# behaviour, you can override the macro that is called by Happy Hare. Some examples as to why you may want this:
# 1. You are using a sparse purge tower and you want Happy Hare errors to park above your purge tower as to not hit
#    any models that are between your tower and normal pause location
# 2. You want to additionally call a macro that sends a push notification on filament swap error
# 3. You want to set additional static arguments to either the default pause macro or your own macro
#
# IMPORTANT: Whatever macro you call _must_ ultimately leave the printer in a paused state. Failure to do so will result
#            in failed prints, jams, and physical hardware crashes
#


#高级：MMU 宏覆盖 ---仅在您熟悉 KLIPPER 宏时设置-----------------------------------
#
#当打印或 MMU 应该暂停时，Happy Hare 将默认调用“暂停”宏。如果你想要额外的
# 行为，你可以覆盖快乐野兔调用的宏。一些关于为什么你可能想要这个的例子：
#1.您正在使用稀疏的吹扫塔，并且希望Happy Hare错误停在清除塔上方，以免被击中
# 塔和正常暂停位置之间的任何模型
#2. 您想另外调用一个宏，该宏在灯丝交换错误时发送推送通知
#3. 您希望将其他静态参数设置为默认暂停宏或您自己的宏
#
#重要说明：无论您调用什么宏 _must_，最终都会使打印机处于暂停状态。否则将导致
# 在失败的打印、卡纸和物理硬件崩溃中

#pause_macro: PAUSE
#



# Advanced: re-initialize behavior --- ONLY SET IF YOU REALLY WANT NON DEFAULT INITIALIZATION ----------------------------
#
# Happy Hare has advanced features like:
# 1. Managing a tool to gate mapping so you can remap incorrectly spools or map all tools to one gate for mono color prints!
# 2. Remembering the state of (presence) of filament in each gate
# 3. The filament material loaded in each gate
# 4. The filament color in each gate
# 5. Grouping gates (spools) into Endless Spool groups
#
# Typically these will be set dynamically over time and automatically saved to 'mmu_vars.cfg'.  When you power up your MMU
# these values are loaded. However, if you explicity reset your MMU state through one of the many reset commands, these values
# will be restored to a default. The system default values are typically empty or in the case of TTG map, 1:1 mapping of
# Tx to Gate #x, or no Endless Spool groups.  However you have the option to define starting values here.
# IMPORTANT: the arrays of values must be the same length as the number of gates on your MMU otherwise they will be rejected.
#
# This group of settings collectively form the default gate map which can be updated with the `MMU_SET_GATE_MAP` command
# or similar commands that determine gate status. They must all be the same length at the number of gates (0 .. n)
# Note that these are the defaults and will be overriden by saved values in mmu_vars.cfg
#
# 1. The default mapping for tool to gate.  If not specified or commented out the mapping will default to Tx = Gate #x
#    'MMU_RESET_TTG_MAP' will revert to these default values. 'MMU_REMAP_TTG' will modify and persist during use.

# 高级：重新初始化行为 --- 仅当您确实想要非默认初始化时才设置 ----------------------------
#
# Happy Hare 具有高级功能，例如：
# 1. 管理工具到门映射，以便您可以重新映射错误的线轴或将所有工具映射到一个门以进行单色打印！
# 2. 记住每个门中灯丝（存在）的状态
# 3. 每个门中加载的灯丝材料
# 4.每个门的灯丝颜色
# 5. 将门（线轴）分组为 Endless Spool 组
#
# 通常，这些将随着时间的推移动态设置并自动保存到“mmu_vars.cfg”。 当您启动 MMU 时
# 这些值已加载。 但是，如果您通过众多重置命令之一显式重置 MMU 状态，则这些值
# 将恢复为默认值。 系统默认值通常为空，或者在 TTG 映射的情况下，为 1:1 映射
# Tx 到 Gate #x，或无 Endless Spool 组。 不过，您可以选择在此处定义起始值。
# 重要提示：值数组的长度必须与 MMU 上的门数相同，否则它们将被拒绝。
#
# 这组设置共同形成默认的门映射，可以使用`MMU_SET_GATE_MAP`命令进行更新
# 或确定门状态的类似命令。 它们在门数 (0 .. n) 上的长度必须相同
# 请注意，这些是默认值，将被 mmu_vars.cfg 中保存的值覆盖
#
# 1. 工具到门的默认映射。 如果未指定或注释掉，映射将默认为 Tx = Gate #x
# 'MMU_RESET_TTG_MAP' 将恢复为这些默认值。 “MMU_REMAP_TTG”将在使用过程中修改并保留。

tool_to_gate_map: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
# tool_to_gate_map: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11
#
# 2. Whether gate has filament available (2=available from buffer, 1=available from spool, 0=empty). If not specified or commentet
#    out the system default of all gates in an unknown state will be assumed
#    'MMU_SET_GATE_MAP' is used to adjust and persist during use
# 2. 门是否有可用的灯丝（2=可从缓冲区获得，1=可从线轴获得，0=空）。 如果没有指定或注释
# 系统默认所有门都处于未知状态
# 'MMU_SET_GATE_MAP' 用于在使用过程中进行调整和持久化


#gate_status: 1, 1, 1, 1, 1, 1, 1, 1, 1
#gate_status:  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
gate_status:  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
#
# 3. Similarly this specifies the material type present in the gate. If not specified or commented out the name will be empty
#    'MMU_SET_GATE_MAP' is used to adjust and persist during use
# 3. 同样，这指定了浇口中存在的材料类型。 如果未指定或注释掉，名称将为空
# 'MMU_SET_GATE_MAP' 用于在使用过程中进行调整和持久化

#gate_material: PLA, ABS+, ABS, ABS, PLA, PLA, PETG, ABS, ABS
#
# 4. Similarly this specifies the color of the filament in each gate. If not specified or commented out the color will be default
#    Color can be w3c color name or RRGGBB (no leading #)
#    'MMU_SET_GATE_MAP' is used to adjust and persist during use

# 4. 同样，这指定了每个门中灯丝的颜色。 如果未指定或注释掉，颜色将为默认颜色
# 颜色可以是 w3c 颜色名称或 RRGGBB（无前导 #）
# 'MMU_SET_GATE_MAP' 用于在使用过程中进行调整和持久化


#gate_color: red, orange, yellow, green, blue, indigo, violet, ffffff, black
#
# 5. If endless spool is turned on, you should define a list of EndlessSpool groups here, one entry for each gate in your MMU
#    when filament runs out on a gate, it will switch to the next gate with the same group number
#    for example, if set to 1, 2, 3, 1, 2, 3, 1, 2, 3 on a 9 cart MMU, and a runout occurs on gate #0
#    the MMU will switch to using gate #3 and then gate #6 automatically remapping the tool as it goes.
#    Note that this will be overriden by a saved value in mmu_vars.cfg if modified with 'MMU_ENDLESS_SPOOL_GROUPS' command
# 5. 如果开启了无尽线轴，您应该在此处定义一个 EndlessSpool 组列表，MMU 中的每个门都有一个条目
# 当某个门上的灯丝耗尽时，它将切换到下一个具有相同组号的门
# 例如，如果在 9 车 MMU 上设置为 1, 2, 3, 1, 2, 3, 1, 2, 3，并且在门 #0 上发生跳动
# MMU 将切换到使用门#3，然后门#6 自动重新映射工具。
# 请注意，如果使用“MMU_ENDLESS_SPOOL_GROUPS”命令进行修改，这将被 mmu_vars.cfg 中保存的值覆盖
#endless_spool_groups: 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1
endless_spool_groups: 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0
#endless_spool_groups: 1, 2, 3, 1, 2, 3, 1, 2, 3
#
# For completeness and primarily for historical reasons rather than usefulness, the default position of each gate on the selector
# and the optional bypass position can be specified. These would only ever be used if 'mmu_vars.cfg' was deleted
# 为了完整性，主要是出于历史原因而不是实用性，选择器上每个门的默认位置
# 并且可以指定可选的旁路位置。 仅当删除“mmu_vars.cfg”时才会使用这些
#selector_offsets: 0，14.3, 31.3, 49.6, 66.7, 84.8, 101.6, 119.1, 136.8, 153.6,  172.0, 188.9
selector_offsets:  14.3, 31.3, 49.6, 66.7, 84.8, 101.6, 119.1, 136.8, 153.6,  172.0, 188.9
# 设置为您测量的位置，0 表示禁用
#selector_bypass: 123.4			# Set to your measured position, 0 to disable

