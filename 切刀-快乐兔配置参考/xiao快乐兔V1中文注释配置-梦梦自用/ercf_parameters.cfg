[ercf]

# Servo configuration  -----------------------------------------------------------------------------------------------------
servo_up_angle: 180	# Default: MG90S servo: Up=30    ; SAVOX SH0255MG: Up=140
servo_down_angle: 40	# Default: MG90S servo: Down=140 ; SAVOX SH0255MG: Down=30


# Gear stepper load/unload speeds ------------------------------------------------------------------------------------------
# Long moves are faster than the small ones and used for the bulk of the bowden movement
# 100mm/s should be "quiet" with the NEMA14 motor or a NEMA17 pancake, but you can go lower for really low noise
long_moves_speed:  70			# mm/s. Conservative value is 100mm/s, Max around 300mm/s
short_moves_speed: 40			# mm/s. Conservative value is 35mm/s. Max around 100mm/s


# Logging ------------------------------------------------------------------------------------------------------------------
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = developer)
# Generally you can keep console logging to a minimal whilst still sending debug output to the ercf.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file
# 记录 ---------------------------------------------- ---------------------------------------------- ------------------
# log_level & logfile_level 可以设置为 (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = developer)
# 通常，您可以将控制台日志记录保持在最低限度，同时仍将调试输出发送到 ercf.log 文件
# 增加控制台日志级别仅在初始设置期间真正有用，以节省不断打开日志文件的麻烦
log_level: 1
logfile_level: 3			# Can also be set to -1 to disable log file completely
log_statistics: 1 			# 1 to log statistics on every toolchange, 0 to disable (but still recorded)
log_visual: 1				# 1 log visual representation of filament, 2 shortened KlipperScreen friendly, 0 disable
startup_status: 0			# Whether to log tool to gate status on startup, 1 = summary, 2 = full, 0 = disable


# Bowden tube movement -----------------------------------------------------------------------------------------------------
# Base value for the loading length used by the auto-calibration macro. Please use a value SMALLER than the real reverse
# bowden length (by about 30-40mm). This is ONLY used during calibration, and has no impact on normal running after calibration
# 鲍登管运动-------------------------------------------- ---------------------------------------------- ------
# 自动校准宏使用的加载长度的基值。请使用比实际反转小的值
# 鲍登长度（约 30-40 毫米）。仅在校准时使用，校准后不影响正常运行
calibration_bowden_length: 750
#
# If you are getting "timer too close" errors, increase the number of moves used during long loading and unloading moves
# 如果你遇到“timer too close”错误，增加长时间加载和卸载移动中使用的移动次数
num_moves: 2				# Number of moves to make when loading or unloading bowden
#
# If enabled, the driver will "believe" the encoder reading and make correction moves to bring the filament to the desired
# end of bowden position. This is useful is you suspect slippage on high speed loading (but requires accurate encoder)
# If disabled, the gear stepper will be solely responsible for filament positioning in bowden (requires minimal friction)
# 如果启用，驱动程序将“相信”编码器读数并进行修正，使灯丝达到所需
# 鲍登位置结束。如果您怀疑高速加载时会打滑（但需要精确的编码器），这很有用
# 如果禁用，齿轮步进器将全权负责鲍登灯丝的定位（需要最小的摩擦力）
apply_bowden_correction: 1

# When using 'apply_bowden_correction' how close in mm the correction moves will attempt to get to target (unload mirrors this value)
# 使用“apply_bowden_correction”时，校正移动将尝试接近目标（卸载反映了此值）
load_bowden_tolerance: 10.0
# Filament homing, loading and unloading controls -------------------------------------------------------------------------
# If you have a toolhead sensor for filament homing:
# 耗材归位、装卸控制---------------------------------------- ------------------------------
# 如果您有用于灯丝归位的工具头传感器：
toolhead_homing_max: 20			# Maximum distance to advance in order to attempt to home to toolhead sensor (default 20)
toolhead_homing_step: 1		# Step size to use when homing to the toolhead sensor (default 1)
#
# Options without toolhead sensor (but still needed for calibration with toolhead sensor)
# 没有工具头传感器的选项（但仍然需要使用工具头传感器进行校准）
extruder_homing_max: 25			# Maximum distance to advance in order to attempt to home the extruder
extruder_homing_step: 2.0		# Step size to use when homing to the extruder with collision detection (default 2)
#
# For accurate homing and to avoid grinding, tune the gear stepper current reduction (currently TMC2209 only)
# To ensure no skipping during fast tip-forming moves, tune the extruder current increase (currently TMC2209 only)
#为了准确归位和避免磨削，调整齿轮步进电流减少（目前仅限TMC2209）
# 为确保在快速成型过程中不会发生跳跃，请调整挤出机电流增量（目前仅限 TMC2209）
extruder_homing_current: 40		# Percentage of gear_stepper current (20%-100%) to use when homing to extruder homing (100 to disable)
extruder_form_tip_current: 100		# Percentage of extruder current (100%-150%) to use when forming tip (100 to disable)
#
# How far (mm) to run gear_stepper and extruder together in sync on load and unload. This will make loading and unloading
# more reliable and will act as a "hair pulling" step on unload.  These settings are optional - use 0 to disable
# Non zero value for 'sync_load_length' will synchronize the whole homing distance if toolhead sensor is installed

# 在加载和卸载时同步运行 gear_stepper 和挤出机的距离（mm）。这将使装载和卸载
# 更可靠，将作为卸载时的“拉头发”步骤。这些设置是可选的 - 使用 0 禁用
# 如果安装了工具头传感器，“sync_load_length”的非零值将同步整个归位距离
sync_load_length: 10			# mm of synchronized extruder loading at entry to extruder
sync_unload_length: 10			# mm of synchronized movement at start of bowden unloading
#
# This is the distance of the final filament load from the homing point to the nozzle
# If homing to toolhead sensor this will be the distance from the toolhead sensor to the nozzle
# If extruder homing it will be the distance from the extruder gears (end of bowden) to the nozzle

#
# This value can be determined by manually inserting filament to your homing point (extruder gears or toolhead sensor)
# and advancing it 1-2mm at a time until it starts to extrude from the nozzle.  Subtract 1-2mm from that distance distance
# to get this value.  If you have large gaps in your purge tower, increase this value.  If you have blobs, reduce this value.
# This value will depend on your extruder, hotend and nozzle setup.
# 这是从归位点到喷嘴的最终灯丝负载的距离
# 如果归位到工具头传感器，这将是工具头传感器到喷嘴的距离
# 如果挤出机归位，它将是从挤出机齿轮（鲍登端）到喷嘴的距离
# 这个值可以通过手动将灯丝插入归位点（挤出机齿轮或工具头传感器）来确定
# 一次推进 1-2 毫米，直到它开始从喷嘴中挤出。从该距离减去 1-2mm
# 获取这个值。如果您的吹扫塔中有大间隙，请增加此值。如果有斑点，请减小此值。
# 该值将取决于您的挤出机、热端和喷嘴设置。


home_position_to_nozzle: 10		# E.g. Revo Voron with CW2 extruder using extruder homing (62 with toolhead sensor)
#
# Advanced and optional. If you regularly switch between sensorless and toolhead sensor or you want to optimize extruder
# unload when using toolhead sensor you can override 'home_position_to_nozzle' with these more specific values
# (Note that the difference between these two represents the extruder to sensor distance and is used as the final
# unload distance from extruder. An accurate setting can reduce tip noise/grinding on exit from extruder)
#extruder_to_nozzle: 72		# E.g. Revo Voron with CW2 extruder using extruder homing
#sensor_to_nozzle: 55.6 		# E.g. Revo Voron with CW2 extruder using toolhead sensor homing
# 高级和可选。如果您经常在无传感器和工具头传感器之间切换，或者您想要优化挤出机
# 使用工具头传感器时卸载，您可以使用这些更具体的值覆盖“home_position_to_nozzle”
#（请注意，这两者之间的差异代表挤出机到传感器的距离，并用作最终的
# 与挤出机的卸载距离。准确的设置可以减少挤出机出口处的尖端噪音/磨削）
#extruder_to_nozzle: 72 # 例如Revo Voron 和 CW2 挤出机使用挤出机归位
sensor_to_nozzle: 10 # 例如Revo Voron 和 CW2 挤出机使用工具头传感器归位

# EXPERIMENTAL: New synchronized gear/extruder movement!
# If enabled for loading or unloading extruder this will override 'sync_load_length' and 'sync_unload_length'
# If you normally run with maxed out gear stepper current consider reducing it with `sync_gear_current`
#
# 实验性：新的同步齿轮/挤出机运动！
# 如果启用装载或卸载挤出机，这将覆盖“sync_load_length”和“sync_unload_length”
# 如果您通常以最大齿轮步进电流运行，请考虑用“sync_gear_current”降低它
sync_to_extruder: 0		# Gear motor is synchronized to extruder during print/在打印过程中，减速电机与挤出机同步
sync_load_extruder: 0		# Full extruder load leverages motor synchronization/挤出机满负荷利用电机同步
sync_unload_extruder: 0		# Full extruder unload (except stand alone tip forming) leverages motor synchronization/挤出机卸载（独立尖端成型除外）利用电机同步
sync_form_tip: 0		# Standalone tip formation (initial part of unload) also leverages motor sychronization/独立的尖端形成（卸载的初始部分）也利用电机同步
#
sync_gear_current: 100		# Percentage of gear_stepper current (10%-100%) to use when syncing with extruder during print/# 打印过程中与挤出机同步时使用的gear_stepper电流百分比 （10%-100%）


# Selector gate positions -------------------------------------------------------------------------------------------------
# The position of each gate (tool) on the selector.  See the manual for setting these values
# 选择门位置 ------------------------------------------ ---------------------------------------------- -
# 每个门（工具）在选择器上的位置。请参阅手册以设置这些值
colorselector: 14.3, 31.3, 49.6, 66.7, 84.8, 101.6, 119.1, 136.8, 153.6,  172.0, 188.9
# 12se
#colorselector: 0.0, 16.9, 33.5, 51.2, 69.6, 86.4, 103.2, 121.60, 137.6, 155.1,  172.2, 188.8
#
# Optional position of the filament bypass (special version of separator block). Comment out or set to 0 to disable
# 灯丝旁路的可选位置（分离块的特殊版本）。注释掉或设置为 0 以禁用
bypass_selector: 122.8	# Set to your measured positio


# This group of settings collectively form the default gate map which can be updated with the `ERCF_SET_GATE_MAP` command
# or similar commands that determine gate status. They must all be the same length at the number of gates (0 .. n)
# Note that these are the defaults and will be overriden by saved values in ercf_vars.cfg.
#
#
# Whether gate has filament available (1=available, 0=empty). If not specified or commented out all gates are unknown (but available)
#gate_status: 1, 0, 0, 0, 0, 0
#
# Similarly this specifies the material type present in the gate.  If not specified for commented out the name will be empty
#gate_material: PLA, PETG, ABS, PLA+, ABS, ABS
#
# Similarly this specifies the color of the filament in each gate. If not specified for commented out the color will be default
#gate_color: red, orange, yellow, green, blue, indigo


# The default mapping for tool to gate.  If not specified or commented out the mapping will default to Tx = Gate #x
# This must be the same length at the number of gates.
# Note that this will be overriden by a saved value in ercf_vars.cfg. ERCF_RESET_TTG_MAP will revert to these default values
# 这组设置共同构成了默认门映射，可以使用 `ERCF_SET_GATE_MAP` 命令更新
# 或确定门状态的类似命令。它们在门数 (0 .. n) 上的长度必须相同
# 请注意，这些是默认值，将被 ercf_vars.cfg 中保存的值覆盖。
#
#
# gate 是否有灯丝可用（1=可用，0=空）。如果未指定或注释掉所有门都是未知的（但可用）
gate_status:  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
#
# 同样，这指定了浇口中存在的材料类型。如果未指定注释掉，名称将为空
#gate_material：PLA、PETG、ABS、PLA+、ABS、ABS
#
# 同样，这指定了每个门中灯丝的颜色。如果未指定注释掉颜色将是默认的
#gate_color：红、橙、黄、绿、蓝、靛


# 工具到门的默认映射。如果未指定或注释掉映射将默认为 Tx = Gate #x
# 这在门的数量上必须是相同的长度。
# 请注意，这将被 ercf_vars.cfg 中保存的值覆盖。 ERCF_RESET_TTG_MAP 将恢复为这些默认值

tool_to_gate_map: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


# Options and Features ----------------------------------------------------------------------------------------------------
# Selector operation. If configured for sensorless homing ERCF can detect blocked filament path and try to recover automatically
# Sensorless still requires the physical endstop switch to be configured as the endstop on the (non intuiative) GEAR stepper
# 选项和功能-------------------------------------------- ---------------------------------------------- ----
# 选择器操作。如果配置为无传感器归位 ERCF 可以检测阻塞的灯丝路径并尝试自动恢复
# 无传感器仍然需要将物理限位开关配置为（非直观的）GEAR 步进器上的限位器

sensorless_selector: 0		#0 = 仅使用物理止动器，1 = 使用高级无传感器选择器归位
enable_clog_detection: 0	# 0 = disable, 1 = static length clog detection, 2 = automatic length clog detection
enable_endless_spool: 0		# 0 = 禁用无限假脱机，1 = 启用无限假脱机（需要堵塞检测）

# If endless spool is turned on, you should define a list of EndlessSpool groups here, one entry for each gate in your ERCF
# when filament runs out on a gate, it will switch to the next gate with the same group number
# for example, if set to 1, 2, 3, 1, 2, 3, 1, 2, 3 on a 9 cart ERCF, and a runout occurs on gate #0
# the ERCF will switch to using gate #3 and then gate #6 automatically remapping the tool as it goes.
# Note that this will be overriden by a saved value in ercf_vars.cfg if modified with ERCF_ENDLESS_SPOOL_GROUPS command
#endless_spool_groups: 1, 2, 3, 1, 2, 3
# 如果开启了无尽的线轴，你应该在这里定义一个 EndlessSpool 组的列表，你的 ERCF 中的每个门都有一个条目
# 当灯丝在一个门上用完时，它将切换到具有相同组号的下一个门
# 例如，如果在 9 车 ERCF 上设置为 1、2、3、1、2、3、1、2、3，并且在门 #0 上发生跳动
# ERCF 将切换到使用#3 门，然后#6 门自动重新映射工具。
# 请注意，如果使用 ERCF_ENDLESS_SPOOL_GROUPS 命令修改，这将被 ercf_vars.cfg 中保存的值覆盖
endless_spool_groups: 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0


# Advanced: ERCF can auto-initialize based on previous persisted state. There are 5 levels with each level bringing in
# additional state information requiring progressively less inital setup. The higher level assume that you don't touch
# ERCF while it is offline and it can come back to life exactly where it left off!  If you do touch it or get confused
# then issue an appropriate reset command (E.g. ERCF_RESET) to get state back to the defaults.
# Enabling `startup_status` is recommended if you use persisted state at level 2 and above
# Levels: 0 = start fresh every time (the former default behavior)
#         1 = restore persisted endless spool groups
#         2 = additionally restore persisted tool-to-gate mapping
#         3 = additionally restore persisted gate status (filament availability and color)
#         4 = additionally restore persisted tool, gate and filament position!


# Advanced: ERCF 可以根据先前的持久状态自动初始化。有5个级别，每个级别都引入
# 额外的状态信息需要逐渐减少初始设置。更高级别假设你不碰
# ERCF 在离线状态下可以在它停止的地方恢复生机！如果你触摸它或感到困惑
# 然后发出适当的重置命令（例如 ERCF_RESET）以将状态恢复为默认值。
# 如果你在级别 2 及以上使用持久化状态，建议启用 `startup_status`
# Levels: 0 = 每次都重新开始（以前的默认行为）
# 1 = 恢复持久的无尽的线轴组
# 2 = 额外恢复持久化的工具到浇口映射
# 3 = 额外恢复持续的门状态（灯丝可用性和颜色）
# 4 = 额外恢复持久的工具、浇口和灯丝位置！

persistence_level: 2

#desired_headroom: 5.0		# ERCF 将尝试保持的跳动余量（最接近触发跳动的 ERCF）
#average_samples: 4		# 上次测量的“阻尼”效果。更高的值意味着clog_length降低的速度会更慢



# Advanced: Configurable, but fairly fixed values ------------------------------------------------------------------------
timeout_pause: 72000		# Time out used by the ERCF_PAUSE
disable_heater: 600		# Delay after which the hotend heater is disabled in the ERCF_PAUSE state
min_temp_extruder: 190		# Used to ensure we can move the extruder and form tips
unload_buffer: 60		# 减少快速卸载量，使准确的编码器卸载有操作空间
load_encoder_retries: 3 	# NERCF在初始负载下尝试抓取灯丝的次数（最多5次）
parking_distance: 43.0		# 控制灯丝停放到栅极垫圈的距离（与编码器的距离，范围=12-30）
ignore_extruder_load_error: 0	# 是否检测到挤出机负载是否成功被视为错误或警告（忽略）
load_bowden_tolerance: 8.0	# 使用“apply_bowden_correction”时，这是校正移动将尝试加载的距离
delay_servo_release: 2.0	# 不使用同步负载时伺服上的延迟释放 （mm）
homing_method: 0		# 实验的。如果不使用工具头传感器，则为灯丝归位法。0=碰撞检测，1=失速护罩
z_hop_height: 5			# Height in mm of z_hop move on pause or runout to avoid blob on print
z_hop_speed: 15			# mm/s Speed of z_hop move
sync_load_speed: 10		# mm/s speed of synchronized extruder load moves
sync_unload_speed: 10		# 同步挤出机卸载移动的毫米/秒速度
nozzle_load_speed: 15		# mm/s 挤出机内从归位位置移动到熔体区的负载速度
nozzle_unload_speed: 20		# mm/s的卸载速度在挤出机内部移动（从熔体区开始的初始移动速度是这个速度的50%）
servo_duration: 0.2		# Duration of PWM burst sent to servo (automatically turns off)

